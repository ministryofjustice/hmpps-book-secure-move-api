---
:basePath: "/api/v2"
:openapi: 3.0.1
:info:
  :title: PECS4 API V2 Docs
  :version: v2
  :description: |
    Book A Secure Move supplier and frontend API.

    This api requires an Accept header with a version in, for example:
:consumes:
  - application/vnd.api+json
:produces:
  - application/vnd.api+json; version=2
:servers:
  - :url: http://localhost:3000/api
    :description: Local development (localhost)
  - :url: https://hmpps-book-secure-move-api-dev.apps.live-1.cloud-platform.service.justice.gov.uk/api
    :description: Dev API
  - :url: https://hmpps-book-secure-move-api-staging.apps.live-1.cloud-platform.service.justice.gov.uk/api
    :description: Staging API
  - :url: https://hmpps-book-secure-move-api-preprod.apps.live-1.cloud-platform.service.justice.gov.uk/api
    :description: PreProd API
  - :url: https://api.bookasecuremove.service.justice.gov.uk/api
    :description: Production API
:security:
  - :oauth2: []
:components:
  :securitySchemes:
    :oauth2:
      :type: :oauth2
      :flows:
        :clientCredentials:
          :authorizationUrl: "/oauth/authorize"
          :tokenUrl: "/oauth/token/"
          :scopes: {}
  :schemas:
    :Ethnicity:
      :$ref: "../v1/ethnicity.yaml#/Ethnicity"
    :Gender:
      :$ref: "../v1/gender.yaml#/Gender"
    :Person:
      :$ref: "../v2/person.yaml#/Person"
    :Profile:
      :$ref: "../v1/profile.yaml#/Profile"
:paths:
  "/people":
    get:
      summary: "Returns a list of people"
      tags:
        - People
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: filter[police_national_computer]
          in: query
          description:
            Filters results to only include people identified by that police_national_computer.
            Either filter[police_national_computer], filter[prison_number] or filter[criminal_records_office]
            are supported.
          schema:
            type: string
            example: 07/1435713R
          format: string
          required: false
        - name: filter[criminal_records_office]
          in: query
          description:
            Filters results to only include people identified by their
            criminal_records_office. Either filter[police_national_computer], filter[prison_number]
            or filter[criminal_records_office] are supported.
          schema:
            type: string
            example: 610592/05U
          format: string
          required: false
        - name: filter[prison_number]
          in: query
          description:
            Filters results to only include people identified by that prison_number.
            Either filter[police_national_computer], filter[prison_number] or filter[criminal_records_office]
            are supported.
          schema:
            type: string
            example: G1234UT
          format: string
          required: false
        - "$ref": "../v2/person_include_parameter.yaml#/PersonIncludeParameter"
        - "$ref": "../v1/pagination_parameters.yaml#/Page"
        - "$ref": "../v1/pagination_parameters.yaml#/PerPage"
      responses:
        "200":
          description: success
          content:
            "application/vnd.api+json; version=2":
              schema:
                "$ref": "../v2/get_people_responses.yaml#/200"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/get_people_responses.yaml#/401"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/get_people_responses.yaml#/415"
    post:
      summary: "Creates a new person and their associated profile"
      tags:
        - People
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - name: body
          in: body
          required: true
          description: The person object to be created
          schema:
            "$ref": person.yaml#/Person
        - "$ref": "../v2/person_include_parameter.yaml#/PersonIncludeParameter"
      responses:
        "201":
          description: created
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/post_people_responses.yaml#/201"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/post_people_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/post_people_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/post_people_responses.yaml#/404"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/post_people_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/post_people_responses.yaml#/422"
  "/people/{person_id}":
    patch:
      summary: "Updates an existing person."
      tags:
        - People
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - name: person_id
          in: path
          required: true
          description: The ID of the person
          schema:
            type: string
          format: uuid
          example: 00525ecb-7316-492a-aae2-f69334b2a155
        - name: body
          in: body
          required: true
          description: The person object to be updated
          schema:
            "$ref": "../v2/person.yaml#/Person"
        - "$ref": "../v2/person_include_parameter.yaml#/PersonIncludeParameter"
      responses:
        "200":
          description: updated
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/patch_people_responses.yaml#/200"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/patch_people_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/patch_people_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/patch_people_responses.yaml#/404"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/patch_people_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/patch_people_responses.yaml#/422"
  "/moves":
    get:
      summary: Returns a list of moves
      tags:
        - Moves
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: filter[date_from]
          in: query
          description:
            Filters results to only include moves on and after the given
            date, e.g. `2019-05-02`
          schema:
            type: string
            example: "2019-05-09"
          format: date
        - name: filter[date_to]
          in: query
          description:
            Filters results to only include moves up to and including the
            given date, e.g. `2019-05-09`
          schema:
            type: string
            example: "2019-05-09"
          format: date
        - name: filter[created_at_from]
          in: query
          description:
            Filters results to only include moves created on or after the
            given date, e.g. `2019-05-02`
          schema:
            type: string
            example: "2019-05-09"
          format: date
        - name: filter[created_at_to]
          in: query
          description:
            Filters results to only include moves created on or before
            the given date, e.g. `2019-05-09`
          schema:
            type: string
            example: "2019-05-09"
          format: date
        - name: filter[status]
          in: query
          explode: false
          description: Filters results to only include moves with the given statuses
          schema:
            type: array
            items:
              type: string
              enum:
                - proposed
                - requested
                - booked
                - cancelled
                - completed
        - name: filter[move_type]
          in: query
          explode: false
          description: Filters results to only include moves with the given move_types
          schema:
            type: array
            items:
              type: string
              enum:
                - court_appearance
                - prison_recall
                - prison_transfer
        - name: filter[cancellation_reason]
          in: query
          explode: false
          description: Filters results to only include moves with the given cancellation_reasons
          schema:
            type: array
            items:
              type: string
              enum:
                - made_in_error
                - supplier_declined_to_move
                - rejected
                - other
        - name: filter[from_location_id]
          description:
            Filters results to only include moves from the given location
            UUIDs
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              format: uuid
        - name: filter[to_location_id]
          description:
            Filters results to only include moves to the given location
            UUIDs
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              format: uuid
        - name: filter[has_relationship_to_allocation]
          in: query
          explode: false
          description:
            Filters results to either exclude or include moves associated
            to an allocation optionally
          schema:
            type: boolean
            example: true
        - name: sort[by]
          description: field to sort results by
          in: query
          style: form
          explode: false
          schema:
            type: string
            enum:
              - name
              - from_location
              - to_location
              - prison_transfer_reason
              - created_at
              - date
              - date_from
        - name: sort[direction]
          description: direction to sort by
          in: query
          style: form
          explode: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - "$ref": "../v2/move_include_parameter.yaml#/MoveIncludeParameter"
        - "$ref": "../v1/pagination_parameters.yaml#/Page"
        - "$ref": "../v1/pagination_parameters.yaml#/PerPage"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/get_moves_responses.yaml#/200"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/get_moves_responses.yaml#/401"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/get_moves_responses.yaml#/415"
    post:
      summary: Creates a new move
      tags:
        - Moves
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - name: body
          in: body
          required: true
          description: The move object to be created
          schema:
            "$ref": "../v2/move.yaml#/Move"
        - "$ref": "../v2/move_include_parameter.yaml#/MoveIncludeParameter"
      responses:
        "201":
          description: created
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/post_moves_responses.yaml#/201"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/post_moves_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/post_moves_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/post_moves_responses.yaml#/404"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/post_moves_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/post_moves_responses.yaml#/422"
  "/moves/{move_id}":
    patch:
      summary: Updates a move. Aliased as PUT /moves/{move_id}.
      tags:
        - Moves
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - name: body
          in: body
          required: true
          description: The move object to be modified
          schema:
            "$ref": "../v2/move.yaml#/Move"
        - "$ref": "../v2/move_include_parameter.yaml#/MoveIncludeParameter"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/patch_move_responses.yaml#/200"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/patch_move_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/patch_move_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/patch_move_responses.yaml#/404"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/patch_move_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/patch_move_responses.yaml#/422"
    get:
      summary: Returns the details of a move
      tags:
        - Moves
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - name: Authorization
          in: header
          schema:
            type: string
            default: Bearer <your-client-token>
          required: true
        - name: Content-Type
          in: header
          description: Accepted request content type
          schema:
            type: string
            default: application/vnd.api+json
          required: true
        - name: move_id
          in: path
          description: The ID of the move
          schema:
            type: string
          format: uuid
          example: 00525ecb-7316-492a-aae2-f69334b2a155
          required: true
        - "$ref": "../v2/move_include_parameter.yaml#/MoveIncludeParameter"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v2/get_move_responses.yaml#/200"
        "401":
          description: unauthorised
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "415":
          description: invalid content type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"

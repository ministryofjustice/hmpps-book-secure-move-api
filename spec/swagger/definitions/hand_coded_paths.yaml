/allocations:
  get:
    summary: Returns a list of allocations
    tags:
    - Allocations
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: content_type_parameter.yaml#/ContentType
    - name: filter[date_from]
      in: query
      description: Filters results to only include allocations on and after the given
        date, e.g. `2019-05-02`
      schema:
        type: string
      format: date
      example: '2019-05-09'
    - name: filter[date_to]
      in: query
      description: Filters results to only include allocations up to and including
        the given date, e.g. `2021-05-09`
      schema:
        type: string
      format: date
      example: '2021-05-09'
    - name: filter[locations]
      in: query
      description: |
        Filters results to only include allocations with the specified `from_location` or `to_location` identifier.

        Multiple location id's can be specified using a comma separator if required.

        Note that this filter __cannot__ be used in combination with `filter[from_locations]` or `filter[to_locations]`.
      schema:
        type: string
      format: uuid
      example: '02cf0c8e-bf28-4e36-bf08-1e15fefa279b,0351fc23-5b8c-409e-aa87-1f7c4adb1ed6'
    - name: filter[from_locations]
      in: query
      description: |
        Filters results to only include allocations with the specified `from_location` identifier.

        Multiple location id's can be specified using a comma separator if required.

        Note that this filter __cannot__ be used in combination with `filter[locations]`.
      schema:
        type: string
      example: '02cf0c8e-bf28-4e36-bf08-1e15fefa279b,0351fc23-5b8c-409e-aa87-1f7c4adb1ed6'
      format: uuid
    - name: filter[to_locations]
      in: query
      description: |
        Filters results to only include allocations with the specified `to_location` identifier.

        Multiple location id's can be specified using a comma separator if required.

        Note that this filter __cannot__ be used in combination with `filter[locations]`.
      schema:
        type: string
      example: '02cf0c8e-bf28-4e36-bf08-1e15fefa279b,0351fc23-5b8c-409e-aa87-1f7c4adb1ed6'
      format: uuid
    - name: filter[status]
      in: query
      explode: false
      description: Filters results to only include allocations with the given statuses
      schema:
        type: array
        items:
          type: string
          enum:
          - filled
          - unfilled
          - cancelled
    - $ref: pagination_parameters.yaml#/Page
    - $ref: pagination_parameters.yaml#/PerPage
    responses:
      '200':
        description: success
        content:
          application/vnd.api+json:
            schema:
              $ref: get_allocations_responses.yaml#/200
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: get_allocations_responses.yaml#/401
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: get_allocations_responses.yaml#/415
  post:
    summary: Creates a new allocation
    tags:
    - Allocations
    consumes:
    - application/vnd.api+json
    parameters:
    - name: body
      in: body
      required: true
      description: The allocation object to be created
      schema:
        $ref: allocation.yaml#/Allocation
    responses:
      '201':
        description: created
        content:
          application/vnd.api+json:
            schema:
              $ref: post_allocations_responses.yaml#/201
      '400':
        description: bad request
        content:
          application/vnd.api+json:
            schema:
              $ref: post_allocations_responses.yaml#/400
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: post_allocations_responses.yaml#/401
      '404':
        description: resource not found
        content:
          application/vnd.api+json:
            schema:
              $ref: post_allocations_responses.yaml#/404
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: post_allocations_responses.yaml#/415
      '422':
        description: unprocessable entity
        content:
          application/vnd.api+json:
            schema:
              $ref: post_allocations_responses.yaml#/422
/allocations/{allocation_id}/events:
  post:
    summary: '[NOT YET IMPLEMENTED] Creates an allocation event'
    description: |
      ## [NOT YET IMPLEMENTED]

      Creating an allocation event can change the underlying allocation's status or other attributes.

      Use the `event_name` attribute to specify the type of event:

      * `cancel` - cancel an allocation and associated moves
    tags:
    - Allocations
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: allocation_id_parameter.yaml#/AllocationId
    - $ref: idempotency_key_parameter.yaml#/IdempotencyKey
    - $ref: content_type_parameter.yaml#/ContentType
    - name: body
      in: body
      required: true
      description: |
        ### Cancelling an Allocation

        An allocation is cancelled by POSTing a `cancelled` event. Cancelling an allocation will change the allocation status to `cancelled`.
        It will also cancel all associated moves with the allocation.

        ```
        {
          "type": "events",
          "attributes": {
            "event_name": "cancel",
            "timestamp": "2020-04-21T13:20:50.52Z"
          }
        }
        ```
        ---
      schema:
        $ref: post_allocation_event.yaml#/PostAllocationEvent
    responses:
      '201':
        description: created
        content:
          application/vnd.api+json:
            schema:
              $ref: post_allocation_events_responses.yaml#/201
        examples:
          Cancel:
            data:
              id: 355b78b6-57da-4c52-9c41-29a90376c0d7
              type: events
              attributes:
                event_name: cancel
                timestamp: '2020-04-21T13:20:50.52Z'
      '400':
        description: bad request
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/400
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/401
      '404':
        description: resource not found
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/404
      '409':
        description: conflict
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/409
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/415
      '422':
        description: unprocessable entity
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/422
/moves:
  get:
    summary: Returns a list of moves
    tags:
    - Moves
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: content_type_parameter.yaml#/ContentType
    - name: filter[date_from]
      in: query
      description: Filters results to only include moves on and after the given date,
        e.g. `2019-05-02`
      schema:
        type: string
        example: '2019-05-09'
      format: date
    - name: filter[date_to]
      in: query
      description: Filters results to only include moves up to and including the given
        date, e.g. `2019-05-09`
      schema:
        type: string
        example: '2019-05-09'
      format: date
    - name: filter[created_at_from]
      in: query
      description: Filters results to only include moves created on or after the given
        date, e.g. `2019-05-02`
      schema:
        type: string
        example: '2019-05-09'
      format: date
    - name: filter[created_at_to]
      in: query
      description: Filters results to only include moves created on or before the
        given date, e.g. `2019-05-09`
      schema:
        type: string
        example: '2019-05-09'
      format: date
    - name: filter[status]
      in: query
      explode: false
      description: Filters results to only include moves with the given statuses
      schema:
        type: array
        items:
          type: string
          enum:
          - proposed
          - requested
          - cancelled
          - completed
    - name: filter[move_type]
      in: query
      explode: false
      description: Filters results to only include moves with the given move_types
      schema:
        type: array
        items:
          type: string
          enum:
          - court_appearance
          - prison_recall
          - prison_transfer
    - name: filter[cancellation_reason]
      in: query
      explode: false
      description: Filters results to only include moves with the given cancellation_reasons
      schema:
        type: array
        items:
          type: string
          enum:
          - made_in_error
          - supplier_declined_to_move
          - rejected
          - other
    - name: filter[from_location_id]
      description: Filters results to only include moves from the given location UUIDs
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          format: uuid
    - name: filter[to_location_id]
      description: Filters results to only include moves to the given location UUIDs
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          format: uuid
    - name: filter[has_relationship_to_allocation]
      in: query
      explode: false
      description: Filters results to either exclude or include moves associated to an allocation optionally
      schema:
        type: boolean
        example: true
    - name: sort[by]
      description: field to sort results by
      in: query
      style: form
      explode: false
      schema:
        type: string
        enum:
        - name
        - from_location
        - to_location
        - prison_transfer_reason
        - created_at
        - date
        - date_from
    - name: sort[direction]
      description: direction to sort by
      in: query
      style: form
      explode: false
      schema:
        type: string
        enum:
        - asc
        - desc
    - $ref: pagination_parameters.yaml#/Page
    - $ref: pagination_parameters.yaml#/PerPage
    responses:
      '200':
        description: success
        content:
          application/vnd.api+json:
            schema:
              $ref: get_moves_responses.yaml#/200
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: get_moves_responses.yaml#/401
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: get_moves_responses.yaml#/415
  post:
    summary: Creates a new move
    tags:
    - Moves
    consumes:
    - application/vnd.api+json
    parameters:
    - name: body
      in: body
      required: true
      description: The move object to be created
      schema:
        $ref: move.yaml#/Move
    responses:
      '201':
        description: created
        content:
          application/vnd.api+json:
            schema:
              $ref: post_moves_responses.yaml#/201
      '400':
        description: bad request
        content:
          application/vnd.api+json:
            schema:
              $ref: post_moves_responses.yaml#/400
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: post_moves_responses.yaml#/401
      '404':
        description: resource not found
        content:
          application/vnd.api+json:
            schema:
              $ref: post_moves_responses.yaml#/404
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: post_moves_responses.yaml#/415
      '422':
        description: unprocessable entity
        content:
          application/vnd.api+json:
            schema:
              $ref: post_moves_responses.yaml#/422
/moves/{move_id}:
  patch:
    summary: Updates a move. Aliased as PUT /moves/{move_id}.
    tags:
    - Moves
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: move_id_parameter.yaml#/MoveId
    - name: body
      in: body
      required: true
      description: The move object to be modified
      schema:
        $ref: move.yaml#/Move
    responses:
      '200':
        description: success
        content:
          application/vnd.api+json:
            schema:
              $ref: put_move_responses.yaml#/200
      '400':
        description: bad request
        content:
          application/vnd.api+json:
            schema:
              $ref: put_move_responses.yaml#/400
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: put_move_responses.yaml#/401
      '404':
        description: resource not found
        content:
          application/vnd.api+json:
            schema:
              $ref: put_move_responses.yaml#/404
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: put_move_responses.yaml#/415
      '422':
        description: unprocessable entity
        content:
          application/vnd.api+json:
            schema:
              $ref: put_move_responses.yaml#/422
/moves/{move_id}/events:
  post:
    deprecated: true
    summary: '[DO NOT USE] Creates a move event'
    description: |
      ## [DO NOT USE]

      Creating a move event can change the underlying move''s status or other attributes.

      Move events _do not_ alter the child journeys associated with the move: additional API calls may be necessary to
      complete or cancel existing journeys.

      Use the `event_name` attribute to specify the type of event:

      * `complete` - completes a move
      * `redirect` - redirects a move to a new `to_location`
      * `lockout` - indicates the move has been locked out at `to_location`
    tags:
    - Moves
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: move_id_parameter.yaml#/MoveId
    - $ref: idempotency_key_parameter.yaml#/IdempotencyKey
    - $ref: content_type_parameter.yaml#/ContentType
    - name: body
      in: body
      required: true
      description: |
        ### Completing a Move

        A move is completed by POSTing a `complete` event. Completing a move will change the move status to `completed`.
        It _does not_ alter the journeys associated with the move: additional API calls will be necessary to complete or
        cancel existing journeys.

        ```
        {
          "type": "events",
          "attributes": {
            "event_name": "complete",
            "timestamp": "2020-04-21T13:20:50.52Z"
          }
        }
        ```

        ### Redirecting a Move

        Creating a redirect event changes the move's destination (`to_location`). It _does not_ alter the journeys
        associated with the move: additional API calls will be necessary to complete or cancel existing journeys and
        create new journeys. The new destination should be specified via a `to_location` relationship. Optionally,
        `notes` may be provided to assist with auditing.

        ```
        {
          "type": "events",
          "attributes": {
            "event_name": "redirect",
            "timestamp": "2020-04-21T13:20:50.52Z",
            "notes": "requested by PMU"
          },
          relationships": {
            "to_location": {
              "data": {
                "type": "locations",
                "id": "c3f9cc0c-0154-49ec-b01e-d60ded8e0ab1"
              }
            }
          }
        }
        ```

        ### Recording a Lockout

        Creating a lockout event _does not_ change the underlying move's status or destination. It _does not_ alter the
        journeys associated with the move: additional API calls will be necessary to complete or cancel existing
        journeys and create new journeys. The lockout location should be specified via a `to_location` relationship.
        Optionally, `notes` may be provided to assist with auditing.

        ```
        {
          "type": "events",
          "attributes": {
            "event_name": "lockout",
            "timestamp": "2020-04-21T13:20:50.52Z",
            "notes": "late arrival due to van breakdown"
          },
          relationships": {
            "to_location": {
              "data": {
                "type": "locations",
                "id": "c3f9cc0c-0154-49ec-b01e-d60ded8e0ab1"
              }
            }
          }
        }
        ```

        ---
      schema:
        $ref: post_move_event.yaml#/PostMoveEvent
    responses:
      '201':
        description: created
        content:
          application/vnd.api+json:
            schema:
              $ref: post_move_events_responses.yaml#/201
        examples:
          Complete:
            data:
              id: 355b78b6-57da-4c52-9c41-29a90376c0d7
              type: events
              attributes:
                event_name: complete
                timestamp: '2020-04-21T13:20:50.52Z'
          Redirect:
            data:
              id: 355b78b6-57da-4c52-9c41-29a90376c0d7
              type: events
              attributes:
                event_name: redirect
                timestamp: '2020-04-21T13:20:50.52Z'
              relationships:
                to_location:
                  data:
                    type: locations
                    id: c3f9cc0c-0154-49ec-b01e-d60ded8e0ab1
          Lockout:
            data:
              id: 355b78b6-57da-4c52-9c41-29a90376c0d7
              type: events
              attributes:
                event_name: lockout
                timestamp: '2020-04-21T13:20:50.52Z'
              relationships:
                to_location:
                  data:
                    type: locations
                    id: c3f9cc0c-0154-49ec-b01e-d60ded8e0ab1
      '400':
        description: bad request
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/400
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/401
      '404':
        description: resource not found
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/404
      '409':
        description: conflict
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/409
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/415
      '422':
        description: unprocessable entity
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/422
/moves/{move_id}/redirect:
  post:
    summary: 'Redirects a move'
    description: |
      Redirecting a move changes the move''s to_location.

      Move events _do not_ alter the child journeys associated with the move: additional API calls may be necessary to
      complete or cancel existing journeys.
    tags:
    - Moves
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: move_id_parameter.yaml#/MoveId
    - $ref: idempotency_key_parameter.yaml#/IdempotencyKey
    - $ref: content_type_parameter.yaml#/ContentType
    - name: body
      in: body
      required: true
      description: |
        ### Redirecting a Move

        Creating a redirect event changes the move's destination (`to_location`). It _does not_ alter the journeys
        associated with the move: additional API calls will be necessary to complete or cancel existing journeys and
        create new journeys. The new destination must be specified via a `to_location` relationship. Optionally,
        `notes` may be provided to assist with auditing.
      schema:
        $ref: post_move_redirect.yaml#/PostMoveRedirect
    responses:
      '204':
        description: no content
        content:
      '400':
        description: bad request
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/400
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/401
      '404':
        description: resource not found
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/404
      '409':
        description: conflict
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/409
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/415
      '422':
        description: unprocessable entity
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/422
/moves/{move_id}/documents:
  post:
    summary: Creates a new document
    tags:
    - Documents
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: move_id_parameter.yaml#/MoveId
    - name: body
      in: body
      required: true
      description: The document object to be created
      schema:
        $ref: document.yaml#/Document
    responses:
      '201':
        description: created
        content:
          application/vnd.api+json:
            schema:
              $ref: post_documents_responses.yaml#/201
      '400':
        description: bad request
        content:
          application/vnd.api+json:
            schema:
              $ref: post_documents_responses.yaml#/400
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: post_documents_responses.yaml#/401
      '404':
        description: resource not found
        content:
          application/vnd.api+json:
            schema:
              $ref: post_documents_responses.yaml#/404
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: post_documents_responses.yaml#/415
      '422':
        description: unprocessable entity
        content:
          application/vnd.api+json:
            schema:
              $ref: post_documents_responses.yaml#/422
/moves/{move_id}/journeys:
  get:
    summary: 'Gets a list of journeys'
    description: |
      This method gets an ordered and paged list of journeys associated with the specified move. Journeys are ordered by
      `timestamp`.
    tags:
    - Move Journeys
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: move_id_parameter.yaml#/MoveId
    - $ref: idempotency_key_parameter.yaml#/IdempotencyKey
    - $ref: content_type_parameter.yaml#/ContentType
    - $ref: pagination_parameters.yaml#/Page
    - $ref: pagination_parameters.yaml#/PerPage
    responses:
      '200':
        description: success
        content:
          application/vnd.api+json:
            schema:
              $ref: get_journeys_responses.yaml#/200
      '400':
        description: bad request
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/400
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/401
      '404':
        description: resource not found
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/404
      '409':
        description: conflict
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/409
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/415
      '422':
        description: unprocessable entity
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/422
  post:
    summary: 'Creates a new journey'
    description: |
      This creates a new journey record and appends it to the move. It _does not_ update the destination of the parent
      move record: additional API calls to the `/moves/{move_id}/events` endpoint will be required in order to change
      the move's destination.
    tags:
    - Move Journeys
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: move_id_parameter.yaml#/MoveId
    - $ref: idempotency_key_parameter.yaml#/IdempotencyKey
    - $ref: content_type_parameter.yaml#/ContentType
    - name: body
      in: body
      required: true
      description: The journey object to be created. It must specify `timestamp`, `billable`, `from_location` and
        `to_location`. Optionally, `supplier` can also be specified if required (otherwise the supplier will be taken from
        the logged-in account).
      schema:
        $ref: post_journey.yaml#/PostJourney
    responses:
      '201':
        description: created
        content:
          application/vnd.api+json:
            schema:
              $ref: post_journeys_responses.yaml#/201
      '400':
        description: bad request
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/400
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/401
      '404':
        description: resource not found
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/404
      '409':
        description: conflict
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/409
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/415
      '422':
        description: unprocessable entity
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/422
/moves/{move_id}/journeys/{journey_id}:
  get:
    summary: 'Gets a journey'
    description: |
      This method gets the specified journey associated with the move.
    tags:
    - Move Journeys
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: move_id_parameter.yaml#/MoveId
    - $ref: journey_id_parameter.yaml#/JourneyId
    - $ref: idempotency_key_parameter.yaml#/IdempotencyKey
    - $ref: content_type_parameter.yaml#/ContentType
    responses:
      '200':
        description: success
        content:
          application/vnd.api+json:
            schema:
              $ref: get_journey_responses.yaml#/200
      '400':
        description: bad request
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/400
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/401
      '404':
        description: resource not found
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/404
      '409':
        description: conflict
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/409
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/415
      '422':
        description: unprocessable entity
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/422
  patch:
    summary: 'Updates a journey''s metadata'
    description: |
      This method updates the specified journey's metadata (e.g. `billable` or vehicle details). It _does not_ update
      the `from_location` or `to_location` of a journey: to change the locations cancel the journey and create a new
      one.
    tags:
    - Move Journeys
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: move_id_parameter.yaml#/MoveId
    - $ref: journey_id_parameter.yaml#/JourneyId
    - $ref: idempotency_key_parameter.yaml#/IdempotencyKey
    - $ref: content_type_parameter.yaml#/ContentType
    - name: body
      in: body
      required: true
      description: The journey object to be updated. It must specify `timestamp`,
        `billable`; it must not specify locations or `state`.
      schema:
        $ref: patch_journey.yaml#/PatchJourney
    responses:
      '200':
        description: success
        content:
          application/vnd.api+json:
            schema:
              $ref: get_journey_responses.yaml#/200
      '400':
        description: bad request
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/400
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/401
      '404':
        description: resource not found
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/404
      '409':
        description: conflict
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/409
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/415
      '422':
        description: unprocessable entity
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/422
/moves/{move_id}/journeys/{journey_id}/events:
  post:
    summary: '[NOT YET IMPLEMENTED] Creates a journey event'
    description: |
      ### [NOT YET IMPLEMENTED]

      Creating a journey event will change a journey's state.

      Completing or cancelling a journey _does not_ alter the state of parent move object: additional API calls on the
      `/moves/{move_id}/events` endpoint will be necessary to complete or cancel the move.

      Use the `event_name` attribute to specify the type of event:

      * `complete` - completes a journey
      * `uncomplete` - uncompletes a journey and reverts the state to `in_progress`
      * `cancel` - cancels a journey
      * `uncancel` - uncancels a journey and reverts the state to `in_progress`
    tags:
    - Move Journeys
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: move_id_parameter.yaml#/MoveId
    - $ref: journey_id_parameter.yaml#/JourneyId
    - $ref: idempotency_key_parameter.yaml#/IdempotencyKey
    - $ref: content_type_parameter.yaml#/ContentType
    - name: body
      in: body
      required: true
      description: |
        ### Completing a journey

        A journey is completed by POSTing a `complete` event. Completing a journey will change the journey state from
        `in_progress` to `completed`. Only a journey which is `in_progress` may be completed.

        ```
        {
          "type": "events",
          "attributes": {
            "event_name": "complete",
            "timestamp": "2020-04-21T13:20:50.52Z"
          }
        }
        ```

        ### Uncompleting a journey

        A journey is uncompleted by POSTing an `uncomplete` event. Uncompleting a journey will change the journey state
        from `completed` to `in_progress`. Only a journey which is `completed` may be uncompleted.

        ```
        {
          "type": "events",
          "attributes": {
            "event_name": "uncomplete",
            "timestamp": "2020-04-21T13:20:50.52Z"
          }
        }
        ```

        ### Cancelling a journey

        A journey is cancelled by POSTing a `cancel` event. Cancelling a journey will change the journey state from
        `in_progress` to `cancelled`. Only a journey which is `in_progress` may be cancelled.

        ```
        {
          "type": "events",
          "attributes": {
            "event_name": "cancel",
            "timestamp": "2020-04-21T13:20:50.52Z"
          }
        }
        ```

        ### Uncancelling a journey

        A journey is uncancelled by POSTing an `uncancel` event. Uncancelling a journey will change the journey state
        from `cancelled` to `in_progress`. Only a journey which is `cancelled` may be uncancelled.

        ```
        {
          "type": "events",
          "attributes": {
            "event_name": "uncancel",
            "timestamp": "2020-04-21T13:20:50.52Z"
          }
        }
        ```

        ---
      schema:
        $ref: post_journey_event.yaml#/PostJourneyEvent
    responses:
      '201':
        description: created
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
              - data
              properties:
                data:
                  $ref: get_journey_event.yaml#/GetJourneyEvent
        examples:
          Completed:
            data:
              id: d0911846-eb20-49dd-b4e1-9f65bcee4b7b
              type: events
              attributes:
                event_name: complete
                timestamp: '2020-04-21T13:20:50.52Z'
          Uncompleted:
            data:
              id: d0911846-eb20-49dd-b4e1-9f65bcee4b7b
              type: events
              attributes:
                event_name: uncomplete
                timestamp: '2020-04-21T13:20:50.52Z'
          Cancelled:
            data:
              id: d0911846-eb20-49dd-b4e1-9f65bcee4b7b
              type: events
              attributes:
                event_name: cancel
                timestamp: '2020-04-21T13:20:50.52Z'
          Uncancelled:
            data:
              id: d0911846-eb20-49dd-b4e1-9f65bcee4b7b
              type: events
              attributes:
                event_name: uncancel
                timestamp: '2020-04-21T13:20:50.52Z'
      '400':
        description: bad request
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/400
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/401
      '404':
        description: resource not found
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/404
      '409':
        description: conflict
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/409
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/415
      '422':
        description: unprocessable entity
        content:
          application/vnd.api+json:
            schema:
              $ref: error_responses.yaml#/422
/people:
  get:
    summary: Returns a list of people
    tags:
    - People
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: content_type_parameter.yaml#/ContentType
    - name: filter[police_national_computer]
      in: query
      description: Filters results to only include people identified by that police_national_computer.
        Either filter[police_national_computer] or filter[prison_number] or both filters
        are required.
      schema:
        type: string
        example: 07/1435713R
      format: string
      required: false
    - name: filter[prison_number]
      in: query
      description: Filters results to only include people identified by that prison_number.
        Either filter[police_national_computer] or filter[prison_number] or both filters
        are required.
      schema:
        type: string
        example: G1234UT
      format: string
      required: false
    - $ref: pagination_parameters.yaml#/Page
    - $ref: pagination_parameters.yaml#/PerPage
    responses:
      '200':
        description: success
        content:
          application/vnd.api+json:
            schema:
              $ref: get_people_responses.yaml#/200
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: get_people_responses.yaml#/401
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: get_people_responses.yaml#/415
  post:
    summary: Creates a new person and their associated profile
    tags:
    - People
    consumes:
    - application/vnd.api+json
    parameters:
    - name: body
      in: body
      required: true
      description: The person object to be created
      schema:
        $ref: person.yaml#/Person
    responses:
      '201':
        description: created
        content:
          application/vnd.api+json:
            schema:
              $ref: post_people_responses.yaml#/201
      '400':
        description: bad request
        content:
          application/vnd.api+json:
            schema:
              $ref: post_people_responses.yaml#/400
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: post_people_responses.yaml#/401
      '404':
        description: resource not found
        content:
          application/vnd.api+json:
            schema:
              $ref: post_people_responses.yaml#/404
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: post_people_responses.yaml#/415
      '422':
        description: unprocessable entity
        content:
          application/vnd.api+json:
            schema:
              $ref: post_people_responses.yaml#/422
/people/{person_id}:
  patch:
    summary: Updates an existing person and their associated profile. Aliased as PUT
      /people/{person_id}.
    tags:
    - People
    consumes:
    - application/vnd.api+json
    parameters:
    - name: person_id
      in: path
      required: true
      description: The ID of the person
      schema:
        type: string
      format: uuid
      example: 00525ecb-7316-492a-aae2-f69334b2a155
    - name: body
      in: body
      required: true
      description: The person object to be updated
      schema:
        $ref: person.yaml#/Person
    responses:
      '200':
        description: updated
        content:
          application/vnd.api+json:
            schema:
              $ref: put_people_responses.yaml#/201
      '400':
        description: bad request
        content:
          application/vnd.api+json:
            schema:
              $ref: put_people_responses.yaml#/400
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: put_people_responses.yaml#/401
      '404':
        description: resource not found
        content:
          application/vnd.api+json:
            schema:
              $ref: put_people_responses.yaml#/404
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: put_people_responses.yaml#/415
      '422':
        description: unprocessable entity
        content:
          application/vnd.api+json:
            schema:
              $ref: put_people_responses.yaml#/422
/reference/allocation_complex_cases:
  get:
    summary: Returns a list of allocation complex cases
    tags:
    - AllocationComplexCases
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: content_type_parameter.yaml#/ContentType
    responses:
      '200':
        description: success
        content:
          application/vnd.api+json:
            schema:
              $ref: get_allocation_complex_cases_responses.yaml#/200
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: get_allocation_complex_cases_responses.yaml#/401
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: get_allocation_complex_cases_responses.yaml#/415
/reference/assessment_questions:
  get:
    summary: Returns a list of assessment questions, optionally filtered by category
    tags:
    - Assessment Questions
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: content_type_parameter.yaml#/ContentType
    - name: filter[category]
      in: query
      description: Filters results to only include move detail types for the given
        category
      schema:
        type: string
        enum:
        - risk
        - health
        - court
    responses:
      '200':
        description: success
        content:
          application/vnd.api+json:
            schema:
              $ref: get_assessment_questions_responses.yaml#/200
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: get_assessment_questions_responses.yaml#/401
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: get_assessment_questions_responses.yaml#/415
/reference/ethnicities:
  get:
    summary: Returns a list of ethnicities
    tags:
    - Ethnicities
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: content_type_parameter.yaml#/ContentType
    responses:
      '200':
        description: success
        content:
          application/vnd.api+json:
            schema:
              $ref: get_ethnicities_responses.yaml#/200
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: get_ethnicities_responses.yaml#/401
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: get_ethnicities_responses.yaml#/415
/reference/genders:
  get:
    summary: Returns a list of genders
    tags:
    - Genders
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: content_type_parameter.yaml#/ContentType
    responses:
      '200':
        description: success
        content:
          application/vnd.api+json:
            schema:
              $ref: get_genders_responses.yaml#/200
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: get_genders_responses.yaml#/401
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: get_genders_responses.yaml#/415
/reference/locations:
  get:
    summary: Returns a list of locations, optionally filtered by type or NOMIS agency
      ID
    tags:
    - Locations
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: content_type_parameter.yaml#/ContentType
    - name: filter[location_type]
      in: query
      description: Filters results by location type, e.g. court or prison
      schema:
        type: string
        enum:
        - court
        - police
        - prison
    - name: filter[nomis_agency_id]
      in: query
      description: Filters results by NOMIS agency ID
      schema:
        type: string
    - name: filter[supplier_id]
      in: query
      description: Filters results to only include locations from the given supplier
      schema:
        type: string
      format: uuid
      example: 950ef512-a25f-46d7-8ced-7ad09510659b
    responses:
      '200':
        description: success
        content:
          application/vnd.api+json:
            schema:
              $ref: get_locations_responses.yaml#/200
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: get_locations_responses.yaml#/401
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: get_locations_responses.yaml#/415
/reference/locations/{location_id}:
  get:
    summary: Returns the details of a location
    tags:
    - Locations
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: content_type_parameter.yaml#/ContentType
    - name: location_id
      in: path
      required: true
      description: The ID of the location
      schema:
        type: string
      format: uuid
      example: 00525ecb-7316-492a-aae2-f69334b2a155
    responses:
      '200':
        description: success
        content:
          application/vnd.api+json:
            schema:
              $ref: get_location_responses.yaml#/200
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: get_location_responses.yaml#/401
      '404':
        description: resource not found
        content:
          application/vnd.api+json:
            schema:
              $ref: get_location_responses.yaml#/404
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: get_location_responses.yaml#/415
/reference/nationalities:
  get:
    summary: Returns a list of nationalities
    tags:
    - Nationalities
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: content_type_parameter.yaml#/ContentType
    responses:
      '200':
        description: success
        content:
          application/vnd.api+json:
            schema:
              $ref: get_nationalities_responses.yaml#/200
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: get_nationalities_responses.yaml#/401
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: get_nationalities_responses.yaml#/415
/reference/regions:
  get:
    summary: Returns a list of regions (location groups)
    tags:
    - Regions
    - Locations
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: content_type_parameter.yaml#/ContentType
    responses:
      '200':
        description: success
        content:
          application/vnd.api+json:
            schema:
              $ref: get_regions_responses.yaml#/200
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: get_regions_responses.yaml#/401
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: get_regions_responses.yaml#/415
/reference/suppliers:
  get:
    summary: Returns the list of suppliers
    tags:
    - Suppliers
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: content_type_parameter.yaml#/ContentType
    responses:
      '200':
        description: success
        content:
          application/vnd.api+json:
            schema:
              $ref: get_suppliers_responses.yaml#/200
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: get_suppliers_responses.yaml#/401
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: get_suppliers_responses.yaml#/415
/reference/suppliers/{supplier_key}:
  get:
    summary: Returns the details of a supplier
    tags:
    - Suppliers
    consumes:
    - application/vnd.api+json
    parameters:
    - $ref: content_type_parameter.yaml#/ContentType
    - name: supplier_key
      in: path
      required: true
      description: The key of the supplier
      schema:
        type: string
      example: test_supplier
    responses:
      '200':
        description: success
        content:
          application/vnd.api+json:
            schema:
              $ref: get_supplier_responses.yaml#/200
      '401':
        description: unauthorized
        content:
          application/vnd.api+json:
            schema:
              $ref: get_supplier_responses.yaml#/401
      '404':
        description: resource not found
        content:
          application/vnd.api+json:
            schema:
              $ref: get_supplier_responses.yaml#/404
      '415':
        description: invalid media type
        content:
          application/vnd.api+json:
            schema:
              $ref: get_supplier_responses.yaml#/415

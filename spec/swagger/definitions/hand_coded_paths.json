{
  "/moves": {
    "get": {
      "summary": "Returns a list of moves",
      "tags": [
        "Moves"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        },
        {
          "name": "filter[date_from]",
          "in": "query",
          "description": "Filters results to only include moves on and after the given date, e.g. `2019-05-02`",
          "schema": {
            "type": "string",
            "example": "2019-05-09"
          },
          "format": "date"
        },
        {
          "name": "filter[date_to]",
          "in": "query",
          "description": "Filters results to only include moves up to and including the given date, e.g. `2019-05-09`",
          "schema": {
            "type": "string",
            "example": "2019-05-09"
          },
          "format": "date"
        },
        {
          "name": "filter[status]",
          "in": "query",
          "description": "Filters results to only include moves with the given status",
          "schema": {
            "type": "string",
            "enum": [
              "requested",
              "cancelled"
            ]
          }
        },
        {
          "name": "filter[from_location_id]",
          "description": "Filters results to only include moves from the given location UUIDs",
          "in": "query",
          "style": "form",
          "explode": false,
          "schema": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        {
          "name": "filter[to_location_id]",
          "description": "Filters results to only include moves to the given location UUIDs",
          "in": "query",
          "style": "form",
          "explode": false,
          "schema": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        {
          "name": "page",
          "in": "query",
          "description": "The page of records to return, defaults to 1 (the first page)",
          "schema": {
            "type": "integer"
          },
          "example": 1
        },
        {
          "name": "per_page",
          "in": "query",
          "description": "Number of records to return in a single response, defaults to 20, maximum value is 100.",
          "schema": {
            "type": "integer"
          },
          "example": 1
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_moves_responses.json#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_moves_responses.json#/401"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_moves_responses.json#/415"
              }
            }
          }
        }
      }
    },
    "post": {
      "summary": "Creates a new move",
      "tags": [
        "Moves"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "body",
          "in": "body",
          "required": true,
          "description": "The move object to be created",
          "schema": {
            "$ref": "move.json#/Move"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "created",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_moves_responses.json#/201"
              }
            }
          }
        },
        "400": {
          "description": "bad request",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_moves_responses.json#/400"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_moves_responses.json#/401"
              }
            }
          }
        },
        "404": {
          "description": "resource not found",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_moves_responses.json#/404"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_moves_responses.json#/415"
              }
            }
          }
        },
        "422": {
          "description": "unprocessable entity",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_moves_responses.json#/422"
              }
            }
          }
        }
      }
    }
  },
  "/people": {
    "get": {
      "summary": "Returns a list of people",
      "tags": [
        "People"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        },
        {
          "name": "filter[police_national_computer]",
          "in": "query",
          "description": "Filters results to only include people identified by that police_national_computer",
          "schema": {
            "type": "string",
            "example": "07/1435713R"
          },
          "format": "string",
          "required": true
        },
        {
          "name": "page",
          "in": "query",
          "description": "The page of records to return, defaults to 1 (the first page)",
          "schema": {
            "type": "integer"
          },
          "example": 1
        },
        {
          "name": "per_page",
          "in": "query",
          "description": "Number of records to return in a single response, defaults to 20, maximum value is 100.",
          "schema": {
            "type": "integer"
          },
          "example": 1
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_people_responses.json#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_people_responses.json#/401"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_people_responses.json#/415"
              }
            }
          }
        }
      }
    },
    "post": {
      "summary": "Creates a new person and their associated profile",
      "tags": [
        "People"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "body",
          "in": "body",
          "required": true,
          "description": "The person object to be created",
          "schema": {
            "$ref": "person.json#/Person"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "created",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_people_responses.json#/201"
              }
            }
          }
        },
        "400": {
          "description": "bad request",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_people_responses.json#/400"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_people_responses.json#/401"
              }
            }
          }
        },
        "404": {
          "description": "resource not found",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_people_responses.json#/404"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_people_responses.json#/415"
              }
            }
          }
        },
        "422": {
          "description": "unprocessable entity",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_people_responses.json#/422"
              }
            }
          }
        }
      }
    }
  },
  "/people/{personId}": {
    "patch": {
      "summary": "Updates an existing person and their associated profile. Aliased as PUT /people/{personId}.",
      "tags": [
        "People"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "personId",
          "in": "path",
          "required": true,
          "description": "The ID of the person",
          "schema": {
            "type": "string"
          },
          "format": "uuid",
          "example": "00525ecb-7316-492a-aae2-f69334b2a155"
        },
        {
          "name": "body",
          "in": "body",
          "required": true,
          "description": "The person object to be updated",
          "schema": {
            "$ref": "person.json#/Person"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "updated",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_people_responses.json#/201"
              }
            }
          }
        },
        "400": {
          "description": "bad request",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_people_responses.json#/400"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_people_responses.json#/401"
              }
            }
          }
        },
        "404": {
          "description": "resource not found",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_people_responses.json#/404"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_people_responses.json#/415"
              }
            }
          }
        },
        "422": {
          "description": "unprocessable entity",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_people_responses.json#/422"
              }
            }
          }
        }
      }
    }
  },
  "/reference/genders": {
    "get": {
      "summary": "Returns a list of genders",
      "tags": [
        "Genders"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_genders_responses.json#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_genders_responses.json#/401"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_genders_responses.json#/415"
              }
            }
          }
        }
      }
    }
  },
  "/reference/ethnicities": {
    "get": {
      "summary": "Returns a list of ethnicities",
      "tags": [
        "Ethnicities"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_ethnicities_responses.json#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_ethnicities_responses.json#/401"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_ethnicities_responses.json#/415"
              }
            }
          }
        }
      }
    }
  },
  "/reference/nationalities": {
    "get": {
      "summary": "Returns a list of nationalities",
      "tags": [
        "Nationalities"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_nationalities_responses.json#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_nationalities_responses.json#/401"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_nationalities_responses.json#/415"
              }
            }
          }
        }
      }
    }
  },
  "/moves/{moveId}": {
    "patch": {
      "summary": "Updates a move. Aliased as PUT /moves/{moveId}.",
      "tags": [
        "Moves"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "moveId",
          "in": "path",
          "required": true,
          "description": "The ID of the move",
          "schema": {
            "type": "string"
          },
          "format": "uuid",
          "example": "00525ecb-7316-492a-aae2-f69334b2a155"
        },
        {
          "name": "body",
          "in": "body",
          "required": true,
          "description": "The move object to be modified",
          "schema": {
            "$ref": "move.json#/Move"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_move_responses.json#/200"
              }
            }
          }
        },
        "400": {
          "description": "bad request",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_move_responses.json#/400"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_move_responses.json#/401"
              }
            }
          }
        },
        "404": {
          "description": "resource not found",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_move_responses.json#/404"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_move_responses.json#/415"
              }
            }
          }
        },
        "422": {
          "description": "unprocessable entity",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_move_responses.json#/422"
              }
            }
          }
        }
      }
    },
    "delete": {
      "summary": "Deletes a move",
      "tags": [
        "Moves"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "moveId",
          "in": "path",
          "required": true,
          "description": "The ID of the move",
          "schema": {
            "type": "string"
          },
          "format": "uuid",
          "example": "00525ecb-7316-492a-aae2-f69334b2a155"
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "delete_move_responses.json#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "delete_move_responses.json#/401"
              }
            }
          }
        },
        "404": {
          "description": "resource not found",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "delete_move_responses.json#/404"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "delete_move_responses.json#/415"
              }
            }
          }
        }
      }
    }
  },
  "/moves/{MoveId}/documents": {
    "post": {
      "summary": "Creates a new document",
      "tags": [
        "Document"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "body",
          "in": "body",
          "required": true,
          "description": "The document object to be created",
          "schema": {
            "$ref": "document.json#/Document"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "created",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_documents_responses.json#/201"
              }
            }
          }
        },
        "400": {
          "description": "bad request",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_documents_responses.json#/400"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_documents_responses.json#/401"
              }
            }
          }
        },
        "404": {
          "description": "resource not found",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_documents_responses.json#/404"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_documents_responses.json#/415"
              }
            }
          }
        },
        "422": {
          "description": "unprocessable entity",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_documents_responses.json#/422"
              }
            }
          }
        }
      }
    }
  },
  "/reference/assessment_questions": {
    "get": {
      "summary": "Returns a list of assessment questions, optionally filtered by category",
      "tags": [
        "Assessment Questions"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        },
        {
          "name": "filter[category]",
          "in": "query",
          "description": "Filters results to only include move detail types for the given category",
          "schema": {
            "type": "string",
            "enum": [
              "risks",
              "health",
              "court"
            ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_assessment_questions_responses.json#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_assessment_questions_responses.json#/401"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_assessment_questions_responses.json#/415"
              }
            }
          }
        }
      }
    }
  },
  "/reference/locations": {
    "get": {
      "summary": "Returns a list of locations, optionally filtered by type or NOMIS agency ID",
      "tags": [
        "Locations"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        },
        {
          "name": "filter[location_type]",
          "in": "query",
          "description": "Filters results by location type, e.g. court or prison",
          "schema": {
            "type": "string",
            "enum": [
              "court",
              "police",
              "prison"
            ]
          }
        },
        {
          "name": "filter[nomis_agency_id]",
          "in": "query",
          "description": "Filters results by NOMIS agency ID",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "filter[supplier_id]",
          "in": "query",
          "description": "Filters results to only include locations from the given supplier",
          "schema": {
            "type": "string"
          },
          "format": "uuid",
          "example": "950ef512-a25f-46d7-8ced-7ad09510659b"
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_locations_responses.json#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_locations_responses.json#/401"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_locations_responses.json#/415"
              }
            }
          }
        }
      }
    }
  },
  "/reference/locations/{locationId}": {
    "get": {
      "summary": "Returns the details of a location",
      "tags": [
        "Locations"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        },
        {
          "name": "locationId",
          "in": "path",
          "required": true,
          "description": "The ID of the location",
          "schema": {
            "type": "string"
          },
          "format": "uuid",
          "example": "00525ecb-7316-492a-aae2-f69334b2a155"
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_location_responses.json#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_location_responses.json#/401"
              }
            }
          }
        },
        "404": {
          "description": "resource not found",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_location_responses.json#/404"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_location_responses.json#/415"
              }
            }
          }
        }
      }
    }
  },
  "/reference/suppliers": {
    "get": {
      "summary": "Returns the list of suppliers",
      "tags": [
        "Suppliers"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_suppliers_responses.json#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_suppliers_responses.json#/401"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_suppliers_responses.json#/415"
              }
            }
          }
        }
      }
    }
  },
  "/reference/suppliers/{supplierKey}": {
    "get": {
      "summary": "Returns the details of a supplier",
      "tags": [
        "Suppliers"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        },
        {
          "name": "supplierKey",
          "in": "path",
          "required": true,
          "description": "The key of the supplier",
          "schema": {
            "type": "string"
          },
          "example": "test_supplier"
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_supplier_responses.json#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_supplier_responses.json#/401"
              }
            }
          }
        },
        "404": {
          "description": "resource not found",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_supplier_responses.json#/404"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_supplier_responses.json#/415"
              }
            }
          }
        }
      }
    }
  }
}
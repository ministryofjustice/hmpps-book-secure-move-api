{
  "/allocations": {
    "get": {
      "summary": "Returns a list of allocations",
      "tags": [
        "Allocations"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        },
        {
          "name": "filter[date_from]",
          "in": "query",
          "description": "Filters results to only include allocations on and after the given date, e.g. `2019-05-02`",
          "schema": {
            "type": "string",
            "example": "2019-05-09"
          },
          "format": "date"
        },
        {
          "name": "filter[date_to]",
          "in": "query",
          "description": "Filters results to only include allocations up to and including the given date, e.g. `2019-05-09`",
          "schema": {
            "type": "string",
            "example": "2019-05-09"
          },
          "format": "date"
        },
        {
          "name": "page",
          "in": "query",
          "description": "The page of records to return, defaults to 1 (the first page)",
          "schema": {
            "type": "integer"
          },
          "example": 1
        },
        {
          "name": "per_page",
          "in": "query",
          "description": "Number of records to return in a single response, defaults to 20, maximum value is 100.",
          "schema": {
            "type": "integer"
          },
          "example": 1
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_allocations_responses.json#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_allocations_responses.json#/401"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_allocations_responses.json#/415"
              }
            }
          }
        }
      }
    }
  },
  "/moves": {
    "get": {
      "summary": "Returns a list of moves",
      "tags": [
        "Moves"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        },
        {
          "name": "filter[date_from]",
          "in": "query",
          "description": "Filters results to only include moves on and after the given date, e.g. `2019-05-02`",
          "schema": {
            "type": "string",
            "example": "2019-05-09"
          },
          "format": "date"
        },
        {
          "name": "filter[date_to]",
          "in": "query",
          "description": "Filters results to only include moves up to and including the given date, e.g. `2019-05-09`",
          "schema": {
            "type": "string",
            "example": "2019-05-09"
          },
          "format": "date"
        },
        {
          "name": "filter[created_at_from]",
          "in": "query",
          "description": "Filters results to only include moves created on or after the given date, e.g. `2019-05-02`",
          "schema": {
            "type": "string",
            "example": "2019-05-09"
          },
          "format": "date"
        },
        {
          "name": "filter[created_at_to]",
          "in": "query",
          "description": "Filters results to only include moves created on or before the given date, e.g. `2019-05-09`",
          "schema": {
            "type": "string",
            "example": "2019-05-09"
          },
          "format": "date"
        },
        {
          "name": "filter[status]",
          "in": "query",
          "explode": false,
          "description": "Filters results to only include moves with the given statuses",
          "schema": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "requested",
                "cancelled",
                "completed"
              ]
            }
          }
        },
        {
          "name": "filter[from_location_id]",
          "description": "Filters results to only include moves from the given location UUIDs",
          "in": "query",
          "style": "form",
          "explode": false,
          "schema": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        {
          "name": "filter[to_location_id]",
          "description": "Filters results to only include moves to the given location UUIDs",
          "in": "query",
          "style": "form",
          "explode": false,
          "schema": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        {
          "name": "sort[by]",
          "description": "field to sort results by",
          "in": "query",
          "style": "form",
          "explode": false,
          "schema": {
            "type": "string",
            "enum": [
              "name",
              "from_location",
              "to_location",
              "prison_transfer_reason",
              "created_at",
              "date",
              "date_from"
            ]
          }
        },
        {
          "name": "sort[direction]",
          "description": "direction to sort by",
          "in": "query",
          "style": "form",
          "explode": false,
          "schema": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        },
        {
          "name": "page",
          "in": "query",
          "description": "The page of records to return, defaults to 1 (the first page)",
          "schema": {
            "type": "integer"
          },
          "example": 1
        },
        {
          "name": "per_page",
          "in": "query",
          "description": "Number of records to return in a single response, defaults to 20, maximum value is 100.",
          "schema": {
            "type": "integer"
          },
          "example": 1
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_moves_responses.yaml#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_moves_responses.yaml#/401"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_moves_responses.yaml#/415"
              }
            }
          }
        }
      }
    },
    "post": {
      "summary": "Creates a new move",
      "tags": [
        "Moves"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "body",
          "in": "body",
          "required": true,
          "description": "The move object to be created",
          "schema": {
            "$ref": "move.yaml#/Move"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "created",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_moves_responses.yaml#/201"
              }
            }
          }
        },
        "400": {
          "description": "bad request",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_moves_responses.yaml#/400"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_moves_responses.yaml#/401"
              }
            }
          }
        },
        "404": {
          "description": "resource not found",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_moves_responses.yaml#/404"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_moves_responses.yaml#/415"
              }
            }
          }
        },
        "422": {
          "description": "unprocessable entity",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_moves_responses.yaml#/422"
              }
            }
          }
        }
      }
    }
  },
  "/moves/{move_id}": {
    "patch": {
      "summary": "Updates a move. Aliased as PUT /moves/{move_id}.",
      "tags": [
        "Moves"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "$ref": "move_id_parameter.yaml#/MoveId"
        },
        {
          "name": "body",
          "in": "body",
          "required": true,
          "description": "The move object to be modified",
          "schema": {
            "$ref": "move.yaml#/Move"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_move_responses.yaml#/200"
              }
            }
          }
        },
        "400": {
          "description": "bad request",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_move_responses.yaml#/400"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_move_responses.yaml#/401"
              }
            }
          }
        },
        "404": {
          "description": "resource not found",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_move_responses.yaml#/404"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_move_responses.yaml#/415"
              }
            }
          }
        },
        "422": {
          "description": "unprocessable entity",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_move_responses.yaml#/422"
              }
            }
          }
        }
      }
    },
    "delete": {
      "description": "## [DO NOT USE]\n\nMoves should be cancelled instead of deleted",
      "deprecated": true,
      "summary": "[DO NOT USE] Deletes a move",
      "tags": [
        "Moves"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "$ref": "move_id_parameter.yaml#/MoveId"
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "delete_move_responses.yaml#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "delete_move_responses.yaml#/401"
              }
            }
          }
        },
        "404": {
          "description": "resource not found",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "delete_move_responses.yaml#/404"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "delete_move_responses.yaml#/415"
              }
            }
          }
        }
      }
    }
  },
  "/moves/{move_id}/complete": {
    "post": {
      "summary": "[NOT YET IMPLEMENTED] Creates a completed move event",
      "description": "## [NOT YET IMPLEMENTED]\n\nCreating a completed move event changes the underlying move's status to be `completed`. It _does not_ alter the journeys associated with the move: additional API calls will be necessary to complete or cancel existing journeys.",
      "tags": [
        "Move Events"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "$ref": "move_id_parameter.yaml#/MoveId"
        },
        {
          "$ref": "idempotency_key_parameter.yaml#/IdempotencyKey"
        },
        {
          "name": "body",
          "in": "body",
          "required": true,
          "description": "The completed move event object to be created. It must specify `timestamp`.",
          "schema": {
            "$ref": "complete.yaml#/PostComplete"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "created",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_move_complete_responses.yaml#/201"
              }
            }
          }
        },
        "400": {
          "description": "bad request",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "error_responses.yaml#/400"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "error_responses.yaml#/401"
              }
            }
          }
        },
        "404": {
          "description": "resource not found",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "error_responses.yaml#/404"
              }
            }
          }
        },
        "409": {
          "description": "conflict",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "error_responses.yaml#/409"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "error_responses.yaml#/415"
              }
            }
          }
        },
        "422": {
          "description": "unprocessable entity",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "error_responses.yaml#/422"
              }
            }
          }
        }
      }
    }
  },
  "/moves/{move_id}/documents": {
    "post": {
      "summary": "Creates a new document",
      "tags": [
        "Documents"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "$ref": "move_id_parameter.yaml#/MoveId"
        },
        {
          "name": "body",
          "in": "body",
          "required": true,
          "description": "The document object to be created",
          "schema": {
            "$ref": "document.yaml#/Document"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "created",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_documents_responses.yaml#/201"
              }
            }
          }
        },
        "400": {
          "description": "bad request",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_documents_responses.yaml#/400"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_documents_responses.yaml#/401"
              }
            }
          }
        },
        "404": {
          "description": "resource not found",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_documents_responses.yaml#/404"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_documents_responses.yaml#/415"
              }
            }
          }
        },
        "422": {
          "description": "unprocessable entity",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_documents_responses.yaml#/422"
              }
            }
          }
        }
      }
    }
  },
  "/moves/{move_id}/lockouts": {
    "post": {
      "summary": "[NOT YET IMPLEMENTED] Creates a lockout event",
      "description": "## [NOT YET IMPLEMENTED]\n\nCreating a lockout event _does not_ change the underlying move's status or destination. It _does not_ alter the journeys associated with the move: additional API calls will be necessary to redirect the move, cancel existing journeys and create new journeys.",
      "tags": [
        "Move Events"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "$ref": "move_id_parameter.yaml#/MoveId"
        },
        {
          "$ref": "idempotency_key_parameter.yaml#/IdempotencyKey"
        },
        {
          "name": "body",
          "in": "body",
          "required": true,
          "description": "The lockout event object to be created. It must specify `timestamp`, `reason` and `location`.",
          "schema": {
            "$ref": "lockout.yaml#/PostLockout"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "created",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_lockouts_responses.yaml#/201"
              }
            }
          }
        },
        "400": {
          "description": "bad request",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "error_responses.yaml#/400"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "error_responses.yaml#/401"
              }
            }
          }
        },
        "404": {
          "description": "resource not found",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "error_responses.yaml#/404"
              }
            }
          }
        },
        "409": {
          "description": "conflict",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "error_responses.yaml#/409"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "error_responses.yaml#/415"
              }
            }
          }
        },
        "422": {
          "description": "unprocessable entity",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "error_responses.yaml#/422"
              }
            }
          }
        }
      }
    }
  },
  "/moves/{move_id}/redirects": {
    "post": {
      "summary": "[NOT YET IMPLEMENTED] Creates a redirect event",
      "description": "## [NOT YET IMPLEMENTED]\n\nCreating a redirect event changes the underlying move's destination (`to_location`). It _does not_ alter the journeys associated with the move: additional API calls will be necessary to cancel existing journeys and create new journeys.",
      "tags": [
        "Move Events"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "$ref": "move_id_parameter.yaml#/MoveId"
        },
        {
          "$ref": "idempotency_key_parameter.yaml#/IdempotencyKey"
        },
        {
          "name": "body",
          "in": "body",
          "required": true,
          "description": "The redirect event object to be created. It must specify `timestamp`, `reason` and `to_location`.",
          "schema": {
            "$ref": "redirect.yaml#/PostRedirect"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "created",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_redirects_responses.yaml#/201"
              }
            }
          }
        },
        "400": {
          "description": "bad request",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "error_responses.yaml#/400"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "error_responses.yaml#/401"
              }
            }
          }
        },
        "404": {
          "description": "resource not found",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "error_responses.yaml#/404"
              }
            }
          }
        },
        "409": {
          "description": "conflict",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "error_responses.yaml#/409"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "error_responses.yaml#/415"
              }
            }
          }
        },
        "422": {
          "description": "unprocessable entity",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "error_responses.yaml#/422"
              }
            }
          }
        }
      }
    }
  },
  "/people": {
    "get": {
      "summary": "Returns a list of people",
      "tags": [
        "People"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        },
        {
          "name": "filter[police_national_computer]",
          "in": "query",
          "description": "Filters results to only include people identified by that police_national_computer. Either filter[police_national_computer] or filter[prison_number] or both filters are required.",
          "schema": {
            "type": "string",
            "example": "07/1435713R"
          },
          "format": "string",
          "required": false
        },
        {
          "name": "filter[prison_number]",
          "in": "query",
          "description": "Filters results to only include people identified by that prison_number. Either filter[police_national_computer] or filter[prison_number] or both filters are required.",
          "schema": {
            "type": "string",
            "example": "G1234UT"
          },
          "format": "string",
          "required": false
        },
        {
          "name": "page",
          "in": "query",
          "description": "The page of records to return, defaults to 1 (the first page)",
          "schema": {
            "type": "integer"
          },
          "example": 1
        },
        {
          "name": "per_page",
          "in": "query",
          "description": "Number of records to return in a single response, defaults to 20, maximum value is 100.",
          "schema": {
            "type": "integer"
          },
          "example": 1
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_people_responses.yaml#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_people_responses.yaml#/401"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_people_responses.yaml#/415"
              }
            }
          }
        }
      }
    },
    "post": {
      "summary": "Creates a new person and their associated profile",
      "tags": [
        "People"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "body",
          "in": "body",
          "required": true,
          "description": "The person object to be created",
          "schema": {
            "$ref": "person.yaml#/Person"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "created",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_people_responses.yaml#/201"
              }
            }
          }
        },
        "400": {
          "description": "bad request",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_people_responses.yaml#/400"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_people_responses.yaml#/401"
              }
            }
          }
        },
        "404": {
          "description": "resource not found",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_people_responses.yaml#/404"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_people_responses.yaml#/415"
              }
            }
          }
        },
        "422": {
          "description": "unprocessable entity",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "post_people_responses.yaml#/422"
              }
            }
          }
        }
      }
    }
  },
  "/people/{person_id}": {
    "patch": {
      "summary": "Updates an existing person and their associated profile. Aliased as PUT /people/{person_id}.",
      "tags": [
        "People"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "person_id",
          "in": "path",
          "required": true,
          "description": "The ID of the person",
          "schema": {
            "type": "string"
          },
          "format": "uuid",
          "example": "00525ecb-7316-492a-aae2-f69334b2a155"
        },
        {
          "name": "body",
          "in": "body",
          "required": true,
          "description": "The person object to be updated",
          "schema": {
            "$ref": "person.yaml#/Person"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "updated",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_people_responses.yaml#/201"
              }
            }
          }
        },
        "400": {
          "description": "bad request",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_people_responses.yaml#/400"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_people_responses.yaml#/401"
              }
            }
          }
        },
        "404": {
          "description": "resource not found",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_people_responses.yaml#/404"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_people_responses.yaml#/415"
              }
            }
          }
        },
        "422": {
          "description": "unprocessable entity",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "put_people_responses.yaml#/422"
              }
            }
          }
        }
      }
    }
  },
  "/reference/allocation_complex_cases": {
    "get": {
      "summary": "Returns a list of allocation complex cases",
      "tags": [
        "AllocationComplexCases"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_allocation_complex_cases_responses.yaml#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_allocation_complex_cases_responses.yaml#/401"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_allocation_complex_cases_responses.yaml#/415"
              }
            }
          }
        }
      }
    }
  },
  "/reference/assessment_questions": {
    "get": {
      "summary": "Returns a list of assessment questions, optionally filtered by category",
      "tags": [
        "Assessment Questions"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        },
        {
          "name": "filter[category]",
          "in": "query",
          "description": "Filters results to only include move detail types for the given category",
          "schema": {
            "type": "string",
            "enum": [
              "risk",
              "health",
              "court"
            ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_assessment_questions_responses.yaml#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_assessment_questions_responses.yaml#/401"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_assessment_questions_responses.yaml#/415"
              }
            }
          }
        }
      }
    }
  },
  "/reference/ethnicities": {
    "get": {
      "summary": "Returns a list of ethnicities",
      "tags": [
        "Ethnicities"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_ethnicities_responses.yaml#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_ethnicities_responses.yaml#/401"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_ethnicities_responses.yaml#/415"
              }
            }
          }
        }
      }
    }
  },
  "/reference/genders": {
    "get": {
      "summary": "Returns a list of genders",
      "tags": [
        "Genders"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_genders_responses.yaml#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_genders_responses.yaml#/401"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_genders_responses.yaml#/415"
              }
            }
          }
        }
      }
    }
  },
  "/reference/locations": {
    "get": {
      "summary": "Returns a list of locations, optionally filtered by type or NOMIS agency ID",
      "tags": [
        "Locations"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        },
        {
          "name": "filter[location_type]",
          "in": "query",
          "description": "Filters results by location type, e.g. court or prison",
          "schema": {
            "type": "string",
            "enum": [
              "court",
              "police",
              "prison"
            ]
          }
        },
        {
          "name": "filter[nomis_agency_id]",
          "in": "query",
          "description": "Filters results by NOMIS agency ID",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "filter[supplier_id]",
          "in": "query",
          "description": "Filters results to only include locations from the given supplier",
          "schema": {
            "type": "string"
          },
          "format": "uuid",
          "example": "950ef512-a25f-46d7-8ced-7ad09510659b"
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_locations_responses.yaml#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_locations_responses.yaml#/401"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_locations_responses.yaml#/415"
              }
            }
          }
        }
      }
    }
  },
  "/reference/locations/{location_id}": {
    "get": {
      "summary": "Returns the details of a location",
      "tags": [
        "Locations"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        },
        {
          "name": "location_id",
          "in": "path",
          "required": true,
          "description": "The ID of the location",
          "schema": {
            "type": "string"
          },
          "format": "uuid",
          "example": "00525ecb-7316-492a-aae2-f69334b2a155"
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_location_responses.yaml#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_location_responses.yaml#/401"
              }
            }
          }
        },
        "404": {
          "description": "resource not found",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_location_responses.yaml#/404"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_location_responses.yaml#/415"
              }
            }
          }
        }
      }
    }
  },
  "/reference/nationalities": {
    "get": {
      "summary": "Returns a list of nationalities",
      "tags": [
        "Nationalities"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_nationalities_responses.yaml#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_nationalities_responses.yaml#/401"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_nationalities_responses.yaml#/415"
              }
            }
          }
        }
      }
    }
  },
  "/reference/suppliers": {
    "get": {
      "summary": "Returns the list of suppliers",
      "tags": [
        "Suppliers"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_suppliers_responses.yaml#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_suppliers_responses.yaml#/401"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_suppliers_responses.yaml#/415"
              }
            }
          }
        }
      }
    }
  },
  "/reference/suppliers/{supplier_key}": {
    "get": {
      "summary": "Returns the details of a supplier",
      "tags": [
        "Suppliers"
      ],
      "consumes": [
        "application/vnd.api+json"
      ],
      "parameters": [
        {
          "name": "Content-Type",
          "in": "header",
          "description": "Accepted request content type",
          "schema": {
            "type": "string",
            "default": "application/vnd.api+json"
          },
          "required": true
        },
        {
          "name": "supplier_key",
          "in": "path",
          "required": true,
          "description": "The key of the supplier",
          "schema": {
            "type": "string"
          },
          "example": "test_supplier"
        }
      ],
      "responses": {
        "200": {
          "description": "success",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_supplier_responses.yaml#/200"
              }
            }
          }
        },
        "401": {
          "description": "unauthorized",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_supplier_responses.yaml#/401"
              }
            }
          }
        },
        "404": {
          "description": "resource not found",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_supplier_responses.yaml#/404"
              }
            }
          }
        },
        "415": {
          "description": "invalid media type",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "get_supplier_responses.yaml#/415"
              }
            }
          }
        }
      }
    }
  }
}

---
:basePath: "/api/v1"
:openapi: 3.0.1
:info:
  :title: PECS4 API V1 Docs
  :version: v1
  :description: Book A Secure Move supplier and frontend API.
:consumes:
  - application/vnd.api+json
:servers:
  - :url: http://localhost:3000/api/v1
    :description: Local development (localhost)
  - :url: https://hmpps-book-secure-move-api-dev.apps.live-1.cloud-platform.service.justice.gov.uk/api/v1
    :description: Dev API
  - :url: https://hmpps-book-secure-move-api-staging.apps.live-1.cloud-platform.service.justice.gov.uk/api/v1
    :description: Staging API
  - :url: https://hmpps-book-secure-move-api-uat.apps.live-1.cloud-platform.service.justice.gov.uk/api/v1
    :description: UAT API
  - :url: https://hmpps-book-secure-move-api-preprod.apps.live-1.cloud-platform.service.justice.gov.uk/api/v1
    :description: PreProd API
  - :url: https://api.bookasecuremove.service.justice.gov.uk/api/v1
    :description: Production API
:security:
  - :oauth2: []
:components:
  :securitySchemes:
    :oauth2:
      :type: :oauth2
      :flows:
        :clientCredentials:
          :authorizationUrl: "/oauth/authorize"
          :tokenUrl: "/oauth/token/"
          :scopes: {}
  :schemas:
    :Allocation:
      :$ref: "../v1/allocation.yaml#/Allocation"
    :AllocationReference:
      :$ref: "../v1/allocation_reference.yaml#/AllocationReference"
    :AllocationComplexCase:
      :$ref: "../v1/allocation_complex_case.yaml#/AllocationComplexCase"
    :AllocationComplexCaseAnswer:
      :$ref: "../v1/allocation_complex_case_answer.yaml#/AllocationComplexCaseAnswer"
    :AssessmentAnswer:
      :$ref: "../v1/assessment_answer.yaml#/AssessmentAnswer"
    :AssessmentQuestion:
      :$ref: "../v1/assessment_question.yaml#/AssessmentQuestion"
    :CourtCase:
      :$ref: "../v1/court_case.yaml#/CourtCase"
    :CourtHearing:
      :$ref: "../v1/court_hearing.yaml#/CourtHearing"
    :CourtHearingReference:
      :$ref: "../v1/court_hearing_reference.yaml#/CourtHearingReference"
    :Document:
      :$ref: "../v1/document.yaml#/Document"
    :Ethnicity:
      :$ref: "../v1/ethnicity.yaml#/Ethnicity"
    :Framework:
      :$ref: "../v1/framework.yaml#/Framework"
    :FrameworkFlag:
      :$ref: "../v1/framework_flag.yaml#/FrameworkFlag"
    :FrameworkNomisMapping:
      :$ref: "../v1/framework_nomis_mapping.yaml#/FrameworkNomisMapping"
    :FrameworkQuestion:
      :$ref: "../v1/framework_question.yaml#/FrameworkQuestion"
    :FrameworkResponse:
      :$ref: "../v1/framework_response.yaml#/FrameworkResponse"
    :Gender:
      :$ref: "../v1/gender.yaml#/Gender"
    :Journey:
      :$ref: "../v1/get_journey.yaml#/GetJourney"
    :Location:
      :$ref: "../v1/location.yaml#/Location"
    :LocationReference:
      :$ref: "../v1/location_reference.yaml#/LocationReference"
    :Move:
      :$ref: "../v1/move.yaml#/Move"
    :MoveReference:
      :$ref: "../v1/move_reference.yaml#/MoveReference"
    :Pagination:
      :$ref: "../v1/pagination.yaml#/Pagination"
    :PaginationLinks:
      :$ref: "../v1/pagination_links.yaml#/PaginationLinks"
    :Person:
      :$ref: "../v1/person.yaml#/Person"
    :PersonReference:
      :$ref: "../v1/person_reference.yaml#/PersonReference"
    :PersonEscortRecord:
      :$ref: "../v1/person_escort_record.yaml#/PersonEscortRecord"
    :Population:
      :$ref: "../v1/population.yaml#/Population"
    :PrisonTransferReason:
      :$ref: "../v1/prison_transfer_reason.yaml#/PrisonTransferReason"
    :ProfileIdentifier:
      :$ref: "../v1/profile_identifier.yaml#/ProfileIdentifier"
    :Region:
      :$ref: "../v1/region.yaml#/Region"
    :Supplier:
      :$ref: "../v1/supplier.yaml#/Supplier"
    :TimetableEntry:
      :$ref: "../v1/timetable_entry.yaml#/TimetableEntry"
:paths:
  "/allocations":
    get:
      summary: Returns a list of allocations
      tags:
        - Allocations
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - name: filter[date_from]
          in: query
          description:
            Filters results to only include allocations on and after the
            given date, e.g. `2019-05-02`
          schema:
            type: string
          format: date
          example: "2019-05-09"
        - name: filter[date_to]
          in: query
          description:
            Filters results to only include allocations up to and including
            the given date, e.g. `2021-05-09`
          schema:
            type: string
          format: date
          example: "2021-05-09"
        - name: filter[locations]
          in: query
          description: |
            Filters results to only include allocations with the specified `from_location` or `to_location` identifier.

            Multiple location id's can be specified using a comma separator if required.

            Note that this filter __cannot__ be used in combination with `filter[from_locations]` or `filter[to_locations]`.
          schema:
            type: string
          format: uuid
          example: 02cf0c8e-bf28-4e36-bf08-1e15fefa279b,0351fc23-5b8c-409e-aa87-1f7c4adb1ed6
        - name: filter[from_locations]
          in: query
          description: |
            Filters results to only include allocations with the specified `from_location` identifier.

            Multiple location id's can be specified using a comma separator if required.

            Note that this filter __cannot__ be used in combination with `filter[locations]`.
          schema:
            type: string
          example: 02cf0c8e-bf28-4e36-bf08-1e15fefa279b,0351fc23-5b8c-409e-aa87-1f7c4adb1ed6
          format: uuid
        - name: filter[to_locations]
          in: query
          description: |
            Filters results to only include allocations with the specified `to_location` identifier.

            Multiple location id's can be specified using a comma separator if required.

            Note that this filter __cannot__ be used in combination with `filter[locations]`.
          schema:
            type: string
          example: 02cf0c8e-bf28-4e36-bf08-1e15fefa279b,0351fc23-5b8c-409e-aa87-1f7c4adb1ed6
          format: uuid
        - name: filter[status]
          in: query
          explode: false
          description:
            Filters results to only include allocations with the given
            statuses
          schema:
            type: array
            items:
              type: string
              enum:
                - filled
                - unfilled
                - cancelled
        - name: sort[by]
          description: field to sort results by
          in: query
          style: form
          explode: false
          schema:
            type: string
            enum:
              - from_location
              - to_location
              - date
              - moves_count
        - name: sort[direction]
          description: direction to sort by
          in: query
          style: form
          explode: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: search[location]
          description: Search expression for matching from/to location titles (case insensitive)
          in: query
          schema:
            type: string
          example: NOTT
        - name: search[person]
          description: Search expression for matching last name of people (case insensitive)
          in: query
          schema:
            type: string
          example: Bloggs
        - "$ref": "../v1/allocations_include_parameter.yaml#/AllocationsIncludeParameter"
        - "$ref": "../v1/pagination_parameters.yaml#/Page"
        - "$ref": "../v1/pagination_parameters.yaml#/PerPage"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_allocations_responses.yaml#/200"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_allocations_responses.yaml#/401"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_allocations_responses.yaml#/415"
    post:
      summary: Creates a new allocation
      tags:
        - Allocations
      consumes:
        - application/vnd.api+json
      parameters:
        - name: body
          in: body
          required: true
          description: The allocation object to be created
          schema:
            "$ref": "../v1/allocation.yaml#/Allocation"
        - "$ref": "../v1/allocation_include_parameter.yaml#/AllocationIncludeParameter"
      responses:
        "201":
          description: created
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_allocations_responses.yaml#/201"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_allocations_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_allocations_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_allocations_responses.yaml#/404"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_allocations_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_allocations_responses.yaml#/422"
  "/allocations/{allocation_id}/cancel":
    post:
      summary: Cancels an allocation and all associated moves
      description: |
        Cancelling an allocation will change the allocation status to `cancelled`.
        It will also cancel all associated moves with the allocation.
      tags:
        - Allocations
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/allocation_id_parameter.yaml#/AllocationId"
        - "$ref": "../v1/idempotency_key_parameter.yaml#/IdempotencyKey"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: body
          in: body
          required: true
          description:
            "Cancellation reason must be specified. A cancellation reason
            comment may optionally be provided.

            "
          schema:
            "$ref": "../v1/post_allocation_cancel.yaml#/PostAllocationCancel"
      responses:
        "204":
          description: no content
          content:
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "409":
          description: conflict
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/409"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
  "/court_hearings":
    post:
      summary: Creates a new court hearing
      tags:
        - CourtHearings
      consumes:
        - application/vnd.api+json
      parameters:
        - name: do_not_save_to_nomis
          in: query
          description: Restrict creating the court hearing in Nomis as well as Book A Secure Move
          schema:
            type: boolean
            default: 'false'
            example: 'true'
            enum:
              - true
              - false
          required: false
        - name: body
          in: body
          required: true
          description: The court hearing object to be created
          schema:
            "$ref": "../v1/court_hearing.yaml#/CourtHearing"
      responses:
        "201":
          description: created
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_court_hearing_responses.yaml#/201"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_court_hearing_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_court_hearing_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_court_hearing_responses.yaml#/404"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_court_hearing_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_court_hearing_responses.yaml#/422"
  "/documents":
    post:
      summary: Creates a new document
      tags:
        - Documents
      consumes:
        - application/vnd.api+json
      parameters:
        - name: body
          in: body
          required: true
          description: The document object to be created
          schema:
            "$ref": "../v1/document.yaml#/Document"
      responses:
        "201":
          description: created
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_documents_responses.yaml#/201"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_documents_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_documents_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_documents_responses.yaml#/404"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_documents_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_documents_responses.yaml#/422"
  "/framework_responses/{framework_response_id}":
    patch:
      summary: Updates a framework response's value
      tags:
      - Framework Responses
      consumes:
      - application/vnd.api+json
      parameters:
      - "$ref": "../v1/framework_response_id_parameter.yaml#/FrameworkResponseId"
      - "$ref": "../v1/framework_response_include_parameter.yaml#/FrameworkResponseIncludeParameter"
      - name: body
        in: body
        required: true
        description: The framework_response object to be modified
        schema:
          "$ref": "../v1/patch_framework_response.yaml#/PatchFrameworkResponse"
      responses:
        '200':
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_framework_response_responses.yaml#/200"
        '400':
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_framework_response_responses.yaml#/400"
        '401':
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_framework_response_responses.yaml#/401"
        '403':
          description: forbidden
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_framework_response_responses.yaml#/403"
        '404':
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_framework_response_responses.yaml#/404"
        '415':
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_framework_response_responses.yaml#/415"
        '422':
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_framework_response_responses.yaml#/422"
  "/moves":
    get:
      summary: Returns a list of moves
      tags:
        - Moves
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: filter[date_from]
          in: query
          description:
            Filters results to only include moves on and after the given
            date, e.g. `2019-05-02`
          schema:
            type: string
            example: "2019-05-09"
          format: date
        - name: filter[date_to]
          in: query
          description:
            Filters results to only include moves up to and including the
            given date, e.g. `2019-05-09`
          schema:
            type: string
            example: "2019-05-09"
          format: date
        - name: filter[created_at_from]
          in: query
          description:
            Filters results to only include moves created on or after the
            given date, e.g. `2019-05-02`
          schema:
            type: string
            example: "2019-05-09"
          format: date
        - name: filter[created_at_to]
          in: query
          description:
            Filters results to only include moves created on or before
            the given date, e.g. `2019-05-09`
          schema:
            type: string
            example: "2019-05-09"
          format: date
        - name: filter[date_of_birth_from]
          in: query
          description:
            Filters results to only include moves with people born on or after the
            given date, e.g. `2009-05-02`
          schema:
            type: string
            example: "2009-05-09"
          format: date
        - name: filter[date_of_birth_to]
          in: query
          description:
            Filters results to only include moves with people born on or before
            the given date, e.g. `2009-05-09`
          schema:
            type: string
            example: "2009-05-09"
          format: date
        - name: filter[status]
          in: query
          explode: false
          description: Filters results to only include moves with the given statuses
          schema:
            type: array
            items:
              type: string
              enum:
                - proposed
                - requested
                - booked
                - in_transit
                - cancelled
                - completed
        - name: filter[move_type]
          in: query
          explode: false
          description: Filters results to only include moves with the given move_types
          schema:
            type: array
            items:
              type: string
              enum:
                - court_appearance
                - police_transfer
                - prison_recall
                - prison_transfer
        - name: filter[cancellation_reason]
          in: query
          explode: false
          description: Filters results to only include moves with the given cancellation_reasons
          schema:
            type: array
            items:
              type: string
              enum:
                - made_in_error
                - supplier_declined_to_move
                - cancelled_by_pmu
                - rejected
                - other
        - name: filter[rejection_reason]
          in: query
          explode: false
          description: Filters results to only include moves with the given rejection_reasons
          schema:
            type: array
            items:
              type: string
              enum:
                - no_space_at_receiving_prison
                - no_transport_available
        - name: filter[supplier_id]
          description: Filters results to only include moves for the given supplier UUIDs
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              format: uuid
        - name: filter[from_location_id]
          description:
            Filters results to only include moves from the given location
            UUIDs
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              format: uuid
        - name: filter[to_location_id]
          description:
            Filters results to only include moves to the given location
            UUIDs
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              format: uuid
        - name: filter[has_relationship_to_allocation]
          in: query
          explode: false
          description:
            Filters results to either exclude or include moves associated
            to an allocation optionally
          schema:
            type: boolean
            example: true
        - name: filter[ready_for_transit]
          in: query
          explode: false
          description:
            Filters results to either moves which have a confirmed person escort record if set to true,
            and moves with no person escort record or non confirmed person escort records if set to false.
            Please note that this filter does not filter by move status, and will include all moves that
            match the above criteria regardless of status i.e. this filter will include moves which are not
            necessarily in the `booked` status. Additional filters are necessary to limit the results to the required
            status of moves (example `booked`).
          schema:
            type: boolean
            example: true
        - name: sort[by]
          description: field to sort results by
          in: query
          style: form
          explode: false
          schema:
            type: string
            enum:
              - name
              - from_location
              - to_location
              - prison_transfer_reason
              - created_at
              - date
              - date_from
        - name: sort[direction]
          description: direction to sort by
          in: query
          style: form
          explode: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - "$ref": "../v1/move_include_parameter.yaml#/MoveIncludeParameter"
        - "$ref": "../v1/pagination_parameters.yaml#/Page"
        - "$ref": "../v1/pagination_parameters.yaml#/PerPage"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_moves_responses.yaml#/200"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_moves_responses.yaml#/401"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_moves_responses.yaml#/415"
    post:
      summary: Creates a new move
      tags:
        - Moves
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - name: body
          in: body
          required: true
          description: The move object to be created
          schema:
            "$ref": "../v1/move.yaml#/Move"
        - "$ref": "../v1/move_include_parameter.yaml#/MoveIncludeParameter"
      responses:
        "201":
          description: created
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_moves_responses.yaml#/201"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_moves_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_moves_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_moves_responses.yaml#/404"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_moves_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_moves_responses.yaml#/422"
  "/moves/{move_id}":
    patch:
      summary: Updates a move. Aliased as PUT /moves/{move_id}.
      tags:
        - Moves
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - name: body
          in: body
          required: true
          description: The move object to be modified
          schema:
            "$ref": "../v1/move.yaml#/Move"
        - "$ref": "../v1/move_include_parameter.yaml#/MoveIncludeParameter"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/put_move_responses.yaml#/200"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/put_move_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/put_move_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/put_move_responses.yaml#/404"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/put_move_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/put_move_responses.yaml#/422"
  "/moves/{move_id}/cancel":
    post:
      summary: Cancels a move
      description: |
        Cancelling a move will change the move status to be `cancelled`.

        Move events _do not_ alter the child journeys associated with the move: additional API calls may be necessary to
        complete or cancel existing journeys.
      tags:
        - Moves
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - "$ref": "../v1/idempotency_key_parameter.yaml#/IdempotencyKey"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: body
          in: body
          required: true
          description: |
            ### Cancelling a Move

            A move is cancelled by POSTing a `cancel` event. Cancelling a move will change the move status to `cancelled`.
            It _does not_ alter the journeys associated with the move: additional API calls will be necessary to complete or
            cancel existing journeys.
          schema:
            "$ref": "../v1/post_move_cancel.yaml#/PostMoveCancel"
      responses:
        "204":
          description: no content
          content:
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "409":
          description: conflict
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/409"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
  "/moves/{move_id}/accept":
    post:
      summary: Accepts a move
      description:
        "Accepting a move will change the move status from `requested`
        to `booked`.

        "
      tags:
        - Moves
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - "$ref": "../v1/idempotency_key_parameter.yaml#/IdempotencyKey"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: body
          in: body
          required: true
          description: |
            ### Accepting a Move

            Accepting a move will change the move status from `requested` to `booked`.
          schema:
            "$ref": "../v1/post_move_accept.yaml#/PostMoveAccept"
      responses:
        "204":
          description: no content
          content:
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "409":
          description: conflict
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/409"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
  "/moves/{move_id}/approve":
    post:
      summary: Approves a move
      description: "Approving a move will change the move status to `requested`
        and update with the provided move date.

        "
      tags:
        - Moves
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - "$ref": "../v1/idempotency_key_parameter.yaml#/IdempotencyKey"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: body
          in: body
          required: true
          description: |
            ### Approving a Move

            Approving a move will change the move status to `requested` and update with the provided move date.
          schema:
            "$ref": "../v1/post_move_approve.yaml#/PostMoveApprove"
      responses:
        "204":
          description: no content
          content:
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "409":
          description: conflict
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/409"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
  "/moves/{move_id}/reject":
    post:
      summary: Rejects a move
      description: "Rejecting a move will change the move status to `cancelled`,
        the move cancellation reason to `rejected` and update with the provided
        rejection reason.

        "
      tags:
        - Moves
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - "$ref": "../v1/idempotency_key_parameter.yaml#/IdempotencyKey"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: body
          in: body
          required: true
          description: |
            ### Rejecting a Move

            Rejecting a move will change the move status to `cancelled`, the move cancellation reason to `rejected` and update with the provided rejection reason.
          schema:
            "$ref": "../v1/post_move_reject.yaml#/PostMoveReject"
      responses:
        "204":
          description: no content
          content:
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "409":
          description: conflict
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/409"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
  "/moves/{move_id}/complete":
    post:
      summary: Completes a move
      description: |
        Completing a move will change the move status to `completed`.

        Move events _do not_ alter the child journeys associated with the move: additional API calls may be necessary to
        complete or cancel existing journeys.
      tags:
        - Moves
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - "$ref": "../v1/idempotency_key_parameter.yaml#/IdempotencyKey"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: body
          in: body
          required: true
          description: |
            ### Completing a Move

            A move is completed by POSTing a `complete` event. Completing a move will change the move status to `completed`.
            It _does not_ alter the journeys associated with the move: additional API calls will be necessary to complete or
            cancel existing journeys.
          schema:
            "$ref": "../v1/post_move_complete.yaml#/PostMoveComplete"
      responses:
        "204":
          description: no content
          content:
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "409":
          description: conflict
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/409"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
  "/moves/{move_id}/lockouts":
    post:
      summary: Records a lockout against a move
      description: |
        Recording a lockout event does not change the moves status. After recording the lockout, if (with the agreement
        of the Authority) the move has a new final destination, then the move should be *redirected* to the new
        destination. If the final destination is unaltered, then the move should not be redirected.

        Move events _do not_ alter the child journeys associated with the move: additional API calls may be necessary to
        complete or cancel existing journeys.
      tags:
        - Moves
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - "$ref": "../v1/idempotency_key_parameter.yaml#/IdempotencyKey"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: body
          in: body
          required: true
          description: |
            ### Record a Lockout event

            A lockout is recorded by POSTing a `lockouts` event. Recording a lockout _does not_ change a move's status.
            It _does not_ alter the journeys associated with the move: additional API calls will be necessary to complete or
            cancel existing journeys.
          schema:
            "$ref": "../v1/post_move_lockout.yaml#/PostMoveLockout"
      responses:
        "204":
          description: no content
          content:
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "409":
          description: conflict
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/409"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
  "/moves/{move_id}/redirects":
    post:
      summary: Redirects a move
      description: |
        Redirecting a move changes the move''s to_location.

        Move events _do not_ alter the child journeys associated with the move: additional API calls may be necessary to
        complete or cancel existing journeys.
      tags:
        - Moves
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - "$ref": "../v1/idempotency_key_parameter.yaml#/IdempotencyKey"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: body
          in: body
          required: true
          description: |
            ### Redirecting a Move

            Creating a redirect event changes the move's destination (`to_location`). It _does not_ alter the journeys
            associated with the move: additional API calls will be necessary to complete or cancel existing journeys and
            create new journeys. The new destination must be specified via a `to_location` relationship. Optionally,
            `notes` may be provided to assist with auditing.
          schema:
            "$ref": "../v1/post_move_redirect.yaml#/PostMoveRedirect"
      responses:
        "204":
          description: no content
          content:
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "409":
          description: conflict
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/409"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
  "/moves/{move_id}/start":
    post:
      summary: Starts a move
      description: |
        Starting a move will change the move status from `booked` to `in_transit`.

        A move should only be started when the Escorting Escort Vehicle is loaded and ready for exit from the Designated
        Location.
      tags:
        - Moves
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - "$ref": "../v1/idempotency_key_parameter.yaml#/IdempotencyKey"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: body
          in: body
          required: true
          description: |
            ### Starting a Move

            Starting a move will change the move status from `booked` to `in_transit`.

            A move should only be started when the Escorting Escort Vehicle is loaded and ready for exit from the
            Designated Location.
          schema:
            "$ref": "../v1/post_move_start.yaml#/PostMoveStart"
      responses:
        "204":
          description: no content
          content:
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "409":
          description: conflict
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/409"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
  "/moves/{move_id}/journeys":
    get:
      summary: Gets a list of journeys
      description: |
        This method gets an ordered and paged list of journeys associated with the specified move. Journeys are ordered by
        `timestamp`.
      tags:
        - Move Journeys
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - "$ref": "../v1/idempotency_key_parameter.yaml#/IdempotencyKey"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - "$ref": "../v1/pagination_parameters.yaml#/Page"
        - "$ref": "../v1/pagination_parameters.yaml#/PerPage"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_journeys_responses.yaml#/200"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "409":
          description: conflict
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/409"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
    post:
      summary: Creates a new journey
      description: |
        This creates a new journey record and appends it to the move. It _does not_ update the destination of the parent
        move record: additional API calls to the `/moves/{move_id}/{event}` endpoint will be required in order to change
        the move's destination.
      tags:
        - Move Journeys
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - "$ref": "../v1/idempotency_key_parameter.yaml#/IdempotencyKey"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: body
          in: body
          required: true
          description:
            The journey object to be created. It must specify `timestamp`,
            `billable`, `from_location` and `to_location`. Optionally, `supplier`
            can also be specified if required (otherwise the supplier will be taken
            from the logged-in account).
          schema:
            "$ref": "../v1/post_journey.yaml#/PostJourney"
        - "$ref": "../v1/journey_include_parameter.yaml#/JourneyIncludeParameter"
      responses:
        "201":
          description: created
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_journeys_responses.yaml#/201"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "409":
          description: conflict
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/409"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
  "/moves/{move_id}/journeys/{journey_id}":
    get:
      summary: Gets a journey
      description:
        "This method gets the specified journey associated with the move.

        "
      tags:
        - Move Journeys
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - "$ref": "../v1/journey_id_parameter.yaml#/JourneyId"
        - "$ref": "../v1/idempotency_key_parameter.yaml#/IdempotencyKey"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - "$ref": "../v1/journey_include_parameter.yaml#/JourneyIncludeParameter"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_journey_responses.yaml#/200"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "409":
          description: conflict
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/409"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
    patch:
      summary: Updates a journey's metadata
      description: |
        This method updates the specified journey's metadata (e.g. `billable` or vehicle details). It _does not_ update
        the `from_location` or `to_location` of a journey: to change the locations cancel the journey and create a new
        one.
      tags:
        - Move Journeys
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - "$ref": "../v1/journey_id_parameter.yaml#/JourneyId"
        - "$ref": "../v1/idempotency_key_parameter.yaml#/IdempotencyKey"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: body
          in: body
          required: true
          description:
            The journey object to be updated. It must specify `timestamp`,
            `billable`; it must not specify locations or `state`.
          schema:
            "$ref": "../v1/patch_journey.yaml#/PatchJourney"
        - "$ref": "../v1/journey_include_parameter.yaml#/JourneyIncludeParameter"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_journey_responses.yaml#/200"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "409":
          description: conflict
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/409"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
  "/moves/{move_id}/journeys/{journey_id}/cancel":
    post:
      summary: Cancels a journey
      description: |
        Cancelling a journey will change the journey state from `in_progress` to `cancelled`.

        Journey events _do not_ alter the parent move associated with the journey: additional API calls may be necessary to
        complete or cancel the move.
      tags:
        - Move Journeys
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - "$ref": "../v1/journey_id_parameter.yaml#/JourneyId"
        - "$ref": "../v1/idempotency_key_parameter.yaml#/IdempotencyKey"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: body
          in: body
          required: true
          description: |
            ### Cancelling a Journey

            A journey is cancelled by POSTing a `cancel` event. A journey must be in an `in_progress` state in order to be
            cancelled. Cancelling a journey will change the journey state to `cancelled`. It _does not_ alter the move
            associated with the journey: additional API calls will be necessary to complete or cancel the move.
          schema:
            "$ref": "../v1/post_journey_cancel.yaml#/PostJourneyCancel"
      responses:
        "204":
          description: no content
          content:
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "409":
          description: conflict
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/409"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
  "/moves/{move_id}/journeys/{journey_id}/complete":
    post:
      summary: Completes a journey
      description: |
        Completing a journey will change the journey state from `in_progress` to `completed`.

        Journey events _do not_ alter the parent move associated with the journey: additional API calls may be necessary to
        complete or cancel the move.
      tags:
        - Move Journeys
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - "$ref": "../v1/journey_id_parameter.yaml#/JourneyId"
        - "$ref": "../v1/idempotency_key_parameter.yaml#/IdempotencyKey"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: body
          in: body
          required: true
          description: |
            ### Completing a Journey

            A journey is completed by POSTing a `complete` event. A journey must be in an `in_progress` state in order to be
            completed. Completing a journey will change the journey state to `completed`. It _does not_ alter the move
            associated with the journey: additional API calls will be necessary to complete or cancel the move.
          schema:
            "$ref": "../v1/post_journey_complete.yaml#/PostJourneyComplete"
      responses:
        "204":
          description: no content
          content:
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "409":
          description: conflict
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/409"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
  "/moves/{move_id}/journeys/{journey_id}/lockouts":
    post:
      summary: Records a lockout against a journey
      description: |
        Recording a lockout event does not change the journey's state. After recording the lockout, the journey should be
        completed or cancelled and additional journey records created to a new location.
      tags:
        - Move Journeys
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - "$ref": "../v1/journey_id_parameter.yaml#/JourneyId"
        - "$ref": "../v1/idempotency_key_parameter.yaml#/IdempotencyKey"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: body
          in: body
          required: true
          description: |
            ### Record a Lockout event

            A lockout is recorded by POSTing a `lockouts` event. Recording a lockout _does not_ change a journey's state.
            Additional API calls will be necessary to complete or cancel existing journeys or create new journeys.
          schema:
            "$ref": "../v1/post_journey_lockout.yaml#/PostJourneyLockout"
      responses:
        "204":
          description: no content
          content:
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "409":
          description: conflict
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/409"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
  "/moves/{move_id}/journeys/{journey_id}/lodgings":
    post:
      summary: Records a lodging against a journey
      description:
        "Recording a lodging event does not change the journey's state
        and is purely an auditing event.

        "
      tags:
        - Move Journeys
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - "$ref": "../v1/journey_id_parameter.yaml#/JourneyId"
        - "$ref": "../v1/idempotency_key_parameter.yaml#/IdempotencyKey"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: body
          in: body
          required: true
          description: |
            ### Record a Lodging event

            A lodging is recorded by POSTing a `lodgings` event. Recording a lodging _does not_ change a journey's state.
            Additional API calls may be necessary to complete or cancel existing journeys or create new journeys.
          schema:
            "$ref": "../v1/post_journey_lodging.yaml#/PostJourneyLodging"
      responses:
        "204":
          description: no content
          content:
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "409":
          description: conflict
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/409"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
  "/moves/{move_id}/journeys/{journey_id}/reject":
    post:
      summary: Rejects a proposed journey
      description: |
        Rejecting a journey will change the `proposed` journey state to `rejected`.

        Journey events _do not_ alter the parent move associated with the journey: additional API calls may be necessary to
        complete or cancel the move.
      tags:
        - Move Journeys
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - "$ref": "../v1/journey_id_parameter.yaml#/JourneyId"
        - "$ref": "../v1/idempotency_key_parameter.yaml#/IdempotencyKey"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: body
          in: body
          required: true
          description: |
            ### Rejecting a Journey

            A journey is rejected by POSTing a `reject` event. A journey must be in a `proposed` state in order to be
            rejected. Rejecting a journey will change the journey state to `rejected`. It _does not_ alter the move
            associated with the journey: additional API calls will be necessary to complete or cancel the move.
          schema:
            "$ref": "../v1/post_journey_reject.yaml#/PostJourneyReject"
      responses:
        "204":
          description: no content
          content:
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "409":
          description: conflict
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/409"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
  "/moves/{move_id}/journeys/{journey_id}/start":
    post:
      summary: Starts a proposed journey
      description: |
        Starting a journey will change the `proposed` journey state to `in_progress`.

        Journey events _do not_ alter the parent move associated with the journey: additional API calls may be necessary to
        complete or cancel the move.
      tags:
        - Move Journeys
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - "$ref": "../v1/journey_id_parameter.yaml#/JourneyId"
        - "$ref": "../v1/idempotency_key_parameter.yaml#/IdempotencyKey"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: body
          in: body
          required: true
          description: |
            ### Starting a Journey

            A journey is started by POSTing a `start` event. A journey must be in a `proposed` state in order to be
            started. Starting a journey will change the journey state to `in_progress`. It _does not_ alter the move
            associated with the journey: additional API calls will be necessary to complete or cancel the move.
          schema:
            "$ref": "../v1/post_journey_start.yaml#/PostJourneyStart"
      responses:
        "204":
          description: no content
          content:
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "409":
          description: conflict
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/409"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
  "/moves/{move_id}/journeys/{journey_id}/uncancel":
    post:
      summary: Uncancels a journey
      description: |
        Uncancelling a journey will revert the `cancelled` journey state to `in_progress`.

        Journey events _do not_ alter the parent move associated with the journey: additional API calls may be necessary to
        complete or cancel the move.
      tags:
        - Move Journeys
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - "$ref": "../v1/journey_id_parameter.yaml#/JourneyId"
        - "$ref": "../v1/idempotency_key_parameter.yaml#/IdempotencyKey"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: body
          in: body
          required: true
          description: |
            ### Uncancelling a Journey

            A journey is uncancelled by POSTing an `uncancel` event. A journey must be in an `cancelled` state in order to be
            uncancelled. Uncancelling a journey will revert the journey state back to `in_progress`. It _does not_ alter the move
            associated with the journey: additional API calls will be necessary to complete or cancel the move.
          schema:
            "$ref": "../v1/post_journey_uncancel.yaml#/PostJourneyUncancel"
      responses:
        "204":
          description: no content
          content:
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "409":
          description: conflict
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/409"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
  "/moves/{move_id}/journeys/{journey_id}/uncomplete":
    post:
      summary: Uncompletes a journey
      description: |
        Uncompleting a journey will revert the `completed` journey state back to `in_progress`.

        Journey events _do not_ alter the parent move associated with the journey: additional API calls may be necessary to
        complete or cancel the move.
      tags:
        - Move Journeys
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/move_id_parameter.yaml#/MoveId"
        - "$ref": "../v1/journey_id_parameter.yaml#/JourneyId"
        - "$ref": "../v1/idempotency_key_parameter.yaml#/IdempotencyKey"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: body
          in: body
          required: true
          description: |
            ### Uncompleting a Journey

            A journey is uncompleted by POSTing an `uncomplete` event. A journey must be in a `completed` state in order to be
            uncompleted. Uncompleting a journey will revert the journey state back to `in_progress`. It _does not_ alter the move
            associated with the journey: additional API calls will be necessary to complete or cancel the move.
          schema:
            "$ref": "../v1/post_journey_uncomplete.yaml#/PostJourneyUncomplete"
      responses:
        "204":
          description: no content
          content:
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "409":
          description: conflict
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/409"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
  "/people":
    get:
      summary: Returns a list of people
      tags:
        - People
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: filter[police_national_computer]
          in: query
          description:
            Filters results to only include people identified by that police_national_computer.
            Either filter[police_national_computer] or filter[prison_number] or both
            filters are required.
          schema:
            type: string
            example: 07/1435713R
          format: string
          required: false
        - name: filter[prison_number]
          in: query
          description:
            Filters results to only include people identified by that prison_number.
            Either filter[police_national_computer] or filter[prison_number] or both
            filters are supported.
          schema:
            type: string
            example: G1234UT
          format: string
          required: false
        - "$ref": "../v1/person_include_parameter.yaml#/PersonIncludeParameter"
        - "$ref": "../v1/pagination_parameters.yaml#/Page"
        - "$ref": "../v1/pagination_parameters.yaml#/PerPage"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_people_responses.yaml#/200"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_people_responses.yaml#/401"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_people_responses.yaml#/415"
    post:
      summary: Creates a new person and their associated profile
      tags:
        - People
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - name: body
          in: body
          required: true
          description: The person object to be created
          schema:
            "$ref": "../v1/person.yaml#/Person"
        - "$ref": "../v1/person_include_parameter.yaml#/PersonIncludeParameter"
      responses:
        "201":
          description: created
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_people_responses.yaml#/201"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_people_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_people_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_people_responses.yaml#/404"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_people_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_people_responses.yaml#/422"
  "/people/{person_id}":
    patch:
      summary: Updates an existing person and their associated profile. Aliased
        as PUT /people/{person_id}.
      tags:
        - People
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - name: person_id
          in: path
          required: true
          description: The ID of the person
          schema:
            type: string
          format: uuid
          example: 00525ecb-7316-492a-aae2-f69334b2a155
        - name: body
          in: body
          required: true
          description: The person object to be updated
          schema:
            "$ref": "../v1/person.yaml#/Person"
        - "$ref": "../v1/person_include_parameter.yaml#/PersonIncludeParameter"
      responses:
        "200":
          description: updated
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/put_people_responses.yaml#/200"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/put_people_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/put_people_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/put_people_responses.yaml#/404"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/put_people_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/put_people_responses.yaml#/422"
  "/people/{person_id}/court_cases":
    get:
      summary: Retrieves the active court cases related to a person. It filters out the non-active court cases.
      tags:
        - People
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/person_id_parameter.yaml#/PersonId"
        - name: filter[active]
          in: query
          description:
            Filters results to only include active court cases
          schema:
            type: boolean
          example: true
          enum:
            - true
            - false
          required: false
        - name: include
          description: Returns a specific list of related resources to the court case
          in: query
          style: form
          explode: false
          schema:
            type: string
            enum:
              - location
          example: location
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_court_cases_responses.yaml#/200"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_court_cases_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_court_cases_responses.yaml#/401"
  "/people/{person_id}/profiles":
    post:
      summary: Creates a new profile
      description: "This creates a new profile for a person.<br>
        Note: this endpoint retrieves Assessment Answers from Nomis:<br>
        If the `assessment_answers` param is not present AND the person has a `prison_number`
        THEN the new profile will be updated with Alerts and Personal Care from NOMIS.
        "
      tags:
        - Profiles
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - name: person_id
          in: path
          required: true
          description: The ID of the person
          schema:
            type: string
          format: uuid
          example: 00525ecb-7316-492a-aae2-f69334b2a155
        - name: body
          in: body
          required: true
          description: The profile object to be created
          schema:
            "$ref": "../v1/profile.yaml#/Profile"
        - "$ref": "../v1/profile_include_parameter.yaml#/ProfileIncludeParameter"
      responses:
        "201":
          description: created
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_profiles_responses.yaml#/201"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_profiles_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_profiles_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_profiles_responses.yaml#/404"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_profiles_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_profiles_responses.yaml#/422"
  "/people/{person_id}/profiles/{profile_id}":
    patch:
      summary: Updates a profile
      tags:
        - Profiles
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - name: person_id
          in: path
          required: true
          description: The ID of the person
          schema:
            type: string
          format: uuid
          example: 00525ecb-7316-492a-aae2-f69334b2a155
        - name: profile_id
          in: path
          required: true
          description: The ID of the profile
          schema:
            type: string
          format: uuid
          example: 00525ecb-7316-492a-aae2-f69334b2a155
        - name: body
          in: body
          required: true
          description: The profile object to be modified
          schema:
            "$ref": "../v1/profile.yaml#/Profile"
        - "$ref": "../v1/profile_include_parameter.yaml#/ProfileIncludeParameter"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_profiles_responses.yaml#/200"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_profiles_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_profiles_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_profiles_responses.yaml#/404"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_profiles_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_profiles_responses.yaml#/422"
  "/people/{person_id}/timetable":
    get:
      summary: Returns timetable entries for a date range which defaults to today
      tags:
        - People
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/person_id_parameter.yaml#/PersonId"
        - name: filter[date_from]
          in: query
          description:
            Filter timetable entries that start on and not before this date. Defaults to today
          schema:
            type: string
          format: date
          example: "2019-05-09"
          required: true
        - name: filter[date_to]
          in: query
          description:
            Filter timetable entries that start up to and including this date. Defaults to today
          schema:
            type: string
          format: date
          example: "2021-05-09"
          required: true
        - name: include
          description: Returns a specific list of related resources to the timetable entries
          in: query
          style: form
          explode: false
          schema:
            type: string
            enum:
              - location
          example: location
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_timetable_responses.yaml#/200"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_timetable_responses.yaml#/401"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_timetable_responses.yaml#/400"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_timetable_responses.yaml#/415"
  "/person_escort_records":
    post:
      summary: Creates a new person escort record
      tags:
      - Person Escort Records
      consumes:
      - application/vnd.api+json
      parameters:
      - "$ref": "../v1/person_escort_record_include_parameter.yaml#/PersonEscortRecordIncludeParameter"
      - name: body
        in: body
        required: true
        description: The `person_escort_record` object to be created. Requires the `version` of the framework of questions, as well as the `move` already associated to a `profile` for a person.
        schema:
          "$ref": "../v1/post_person_escort_record.yaml#/PostPersonEscortRecord"
      responses:
        '201':
          description: created
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_person_escort_record_responses.yaml#/201"
        '400':
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_person_escort_record_responses.yaml#/400"
        '401':
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_person_escort_record_responses.yaml#/401"
        '404':
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_person_escort_record_responses.yaml#/404"
        '415':
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_person_escort_record_responses.yaml#/415"
        '422':
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_person_escort_record_responses.yaml#/422"
  "/person_escort_records/{person_escort_record_id}":
    get:
      summary: Gets a person_escort_record
      description:
        "This method gets the specified person_escort_record"
      tags:
        - Person Escort Records
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - "$ref": "../v1/person_escort_record_id_parameter.yaml#/PersonEscortRecordId"
        - "$ref": "../v1/person_escort_record_include_parameter.yaml#/PersonEscortRecordIncludeParameter"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_person_escort_record_responses.yaml#/200"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
    patch:
      summary: Updates a person_escort_record's status
      tags:
      - Person Escort Records
      consumes:
      - application/vnd.api+json
      parameters:
      - "$ref": "../v1/person_escort_record_id_parameter.yaml#/PersonEscortRecordId"
      - "$ref": "../v1/person_escort_record_include_parameter.yaml#/PersonEscortRecordIncludeParameter"
      - name: body
        in: body
        required: true
        description: The `person_escort_record` object to be modified. Sets the current status of the `person_escort_record` as `confirmed` after a `person_escort_record` is `completed`.
        schema:
          "$ref": "../v1/patch_person_escort_record.yaml#/PatchPersonEscortRecord"
      responses:
        '200':
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_person_escort_record_responses.yaml#/200"
        '400':
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_person_escort_record_responses.yaml#/400"
        '401':
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_person_escort_record_responses.yaml#/401"
        '404':
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_person_escort_record_responses.yaml#/404"
        '415':
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_person_escort_record_responses.yaml#/415"
        '422':
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_person_escort_record_responses.yaml#/422"
  "/person_escort_records/{person_escort_record_id}/framework_responses":
    patch:
      summary: Bulk updates multiple framework response values for a person_escort_record
      description:
        "This method updates multiple framework response values for the specified person_escort_record"
      tags:
        - Framework Responses
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - "$ref": "../v1/person_escort_record_id_parameter.yaml#/PersonEscortRecordId"
        - name: body
          in: body
          required: true
          description: __Array__ of framework_response objects to be modified
          schema:
            type: array
            items:
              "$ref": "../v1/patch_framework_response.yaml#/PatchFrameworkResponse"
      responses:
        "204":
          description: no content
          content:
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/422"
  "/populations":
    post:
      summary: Creates a new population
      tags:
        - Populations
      consumes:
        - application/vnd.api+json
      parameters:
        - name: body
          in: body
          required: true
          description: The population object to be created
          schema:
            "$ref": "../v1/population.yaml#/Population"
        - "$ref": "../v1/population_include_parameter.yaml#/PopulationIncludeParameter"
      responses:
        "201":
          description: created
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_populations_responses.yaml#/201"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_populations_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_populations_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_populations_responses.yaml#/404"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_populations_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/post_populations_responses.yaml#/422"
  "/populations/{population_id}":
    get:
      summary: Returns population details for a given date and location
      tags:
        - Populations
      parameters:
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/population_id_parameter.yaml#/PopulationId"
        - "$ref": "../v1/population_include_parameter.yaml#/PopulationIncludeParameter"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_population_responses.yaml#/200"
        "401":
          description: unauthorised
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/401"
        "404":
          description: not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/404"
        "415":
          description: invalid content type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/error_responses.yaml#/415"
    patch:
      summary: Updates existing population details
      tags:
        - Populations
      consumes:
        - application/vnd.api+json
      parameters:
        - name: body
          in: body
          required: true
          description: The population details to be updated
          schema:
            "$ref": "../v1/population.yaml#/Population"
        - "$ref": "../v1/population_id_parameter.yaml#/PopulationId"
        - "$ref": "../v1/population_include_parameter.yaml#/PopulationIncludeParameter"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_population_responses.yaml#/200"
        "400":
          description: bad request
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_population_responses.yaml#/400"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_population_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_population_responses.yaml#/404"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_population_responses.yaml#/415"
        "422":
          description: unprocessable entity
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/patch_population_responses.yaml#/422"
  "/reference/allocation_complex_cases":
    get:
      summary: Returns a list of allocation complex cases
      tags:
        - AllocationComplexCases
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_allocation_complex_cases_responses.yaml#/200"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_allocation_complex_cases_responses.yaml#/401"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_allocation_complex_cases_responses.yaml#/415"
  "/reference/assessment_questions":
    get:
      summary: Returns a list of assessment questions, optionally filtered by category
      tags:
        - Assessment Questions
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: filter[category]
          in: query
          description:
            Filters results to only include move detail types for the given
            category
          schema:
            type: string
            enum:
              - risk
              - health
              - court
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_assessment_questions_responses.yaml#/200"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_assessment_questions_responses.yaml#/401"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_assessment_questions_responses.yaml#/415"
  "/reference/ethnicities":
    get:
      summary: Returns a list of ethnicities
      tags:
        - Ethnicities
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_ethnicities_responses.yaml#/200"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_ethnicities_responses.yaml#/401"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_ethnicities_responses.yaml#/415"
  "/reference/genders":
    get:
      summary: Returns a list of genders
      tags:
        - Genders
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_genders_responses.yaml#/200"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_genders_responses.yaml#/401"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_genders_responses.yaml#/415"
  "/reference/locations":
    get:
      summary: Returns a list of locations, optionally filtered by type or NOMIS
        agency ID
      tags:
        - Locations
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: filter[location_type]
          in: query
          description: Filters results by location type, e.g. court or prison
          schema:
            type: string
            enum:
              - court
              - police
              - prison
              - secure_training_centre
              - secure_childrens_home
              - approved_premises
              - probation_office
              - community_rehabilitation_company
              - foreign_national_prison
              - voluntary_hostel
              - hospital
              - high_security_hospital
              - immigration_detention_centre
        - name: filter[nomis_agency_id]
          in: query
          description: Filters results by NOMIS agency ID
          schema:
            type: string
        - name: filter[supplier_id]
          in: query
          description: Filters results to only include locations from the given supplier
          schema:
            type: string
          format: uuid
          example: 950ef512-a25f-46d7-8ced-7ad09510659b
        - "$ref": "../v1/location_include_parameter.yaml#/LocationIncludeParameter"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_locations_responses.yaml#/200"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_locations_responses.yaml#/401"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_locations_responses.yaml#/415"
  "/reference/locations/{location_id}":
    get:
      summary: Returns the details of a location
      tags:
        - Locations
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: location_id
          in: path
          required: true
          description: The ID of the location
          schema:
            type: string
          format: uuid
          example: 00525ecb-7316-492a-aae2-f69334b2a155
        - "$ref": "../v1/location_include_parameter.yaml#/LocationIncludeParameter"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_location_responses.yaml#/200"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_location_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_location_responses.yaml#/404"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_location_responses.yaml#/415"
  "/reference/prison_transfer_reasons":
    get:
      summary: Returns a list of prison transfer reasons
      tags:
        - PrisonTransferReasons
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_prison_transfer_reasons_responses.yaml#/200"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_prison_transfer_reasons_responses.yaml#/401"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_prison_transfer_reasons_responses.yaml#/415"
  "/reference/regions":
    get:
      summary: Returns a list of regions (location groups)
      tags:
        - Regions
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - "$ref": "../v1/region_include_parameter.yaml#/RegionIncludeParameter"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_regions_responses.yaml#/200"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_regions_responses.yaml#/401"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_regions_responses.yaml#/415"
  "/reference/regions/{region_id}":
    get:
      summary: Returns details of a single region (location group)
      tags:
        - Regions
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - "$ref": "../v1/region_include_parameter.yaml#/RegionIncludeParameter"
        - name: region_id
          in: path
          required: true
          description: The ID of the region
          schema:
            type: string
          format: uuid
          example: 00525ecb-7316-492a-aae2-f69334b2a155
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_region_responses.yaml#/200"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_region_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_region_responses.yaml#/404"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_region_responses.yaml#/415"
  "/reference/suppliers":
    get:
      summary: Returns the list of suppliers
      tags:
        - Suppliers
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_suppliers_responses.yaml#/200"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_suppliers_responses.yaml#/401"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_suppliers_responses.yaml#/415"
  "/reference/suppliers/{supplier_key}":
    get:
      summary: Returns the details of a supplier
      tags:
        - Suppliers
      consumes:
        - application/vnd.api+json
      parameters:
        - "$ref": "../v2/accept_type_parameter.yaml#/Accept"
        - "$ref": "../v1/content_type_parameter.yaml#/ContentType"
        - name: supplier_key
          in: path
          required: true
          description: The key of the supplier
          schema:
            type: string
          example: test_supplier
      responses:
        "200":
          description: success
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_supplier_responses.yaml#/200"
        "401":
          description: unauthorized
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_supplier_responses.yaml#/401"
        "404":
          description: resource not found
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_supplier_responses.yaml#/404"
        "415":
          description: invalid media type
          content:
            application/vnd.api+json:
              schema:
                "$ref": "../v1/get_supplier_responses.yaml#/415"

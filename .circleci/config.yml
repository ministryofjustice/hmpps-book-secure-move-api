version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@7.1.0
  slack: circleci/slack@4.12.1

aliases:
  - &notify_slack_on_failure
    slack/notify:
      event: fail
      branch_pattern: main
      channel: pecs-dev
      custom: |
        {
          "blocks": [
            {
              "type": "context",
              "elements": [
                {
                  "type": "mrkdwn",
                  "text": ":circleci-${CCI_STATUS}: CircleCI job *${CIRCLE_JOB}* ${CCI_STATUS}"
                }
              ]
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "*${CIRCLE_PROJECT_REPONAME}* failed ${CIRCLE_JOB}"
              },
              "accessory": {
                "type": "button",
                "text": {
                  "type": "plain_text",
                  "text": "View job"
                },
                "url": "${CIRCLE_BUILD_URL}"
              }
            }
          ]
        }
  - &notify_slack_on_release_start
    slack/notify:
      channel: $BUILD_NOTIFICATIONS_CHANNEL_ID
      custom: '{
              "blocks": [
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*API is being prepared for release :building_construction:*"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "A new release was created by ${CIRCLE_USERNAME}"
                  },
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "@here"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Changelog"
                      },
                      "url": "https://github.com/ministryofjustice/hmpps-book-secure-move-api/blob/main/CHANGELOG.md"
                    }
                  ]
                }
              ]
            }'
  - &notify_slack_of_approval
    slack/notify:
      channel: $BUILD_NOTIFICATIONS_CHANNEL_ID
      custom: '{
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "API release *requires your approval* before it can be deployed :eyes:"
                  },
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "${BUILD_NOTIFICATIONS_MENTION_ID}"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Workflow"
                      },
                      "url": "https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}"
                    }
                  ]
                }
              ]
            }'
  - &notify_slack_on_release_end
    slack/notify:
      channel: $BUILD_NOTIFICATIONS_CHANNEL_ID
      custom: '{
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*API has been deployed* :rocket:"
                  },
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "@here This release was successfully deployed to production"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Release"
                      },
                      "url": "https://github.com/ministryofjustice/hmpps-book-secure-move-api/releases"
                    }
                  ]
                }
              ]
            }'
  - &all_tags
    filters:
      tags:
        only: /.*/
  - &only_main
    filters:
      branches:
        only:
          - main
  - &only_for_deployment
    filters:
      tags:
        only: /^v.*/
      branches:
        only:
          - main
          - dev-auth-from-docs
          - /.*-deploydev/
  - &only_deploy_tags
    filters:
      tags:
        only: /^v.*/
      branches:
        ignore: /.*/

# Not so keen on using references, but keeping them for now in case they have DRYness benefits.
# Likely to flatten then into the respective commands section.
references:
  _save-cache: &save-cache
    save_cache:
      key: v2-dependencies-{{ checksum "Gemfile.lock" }}
      paths:
        - vendor/bundle
  _restore-cache: &restore-cache
    restore_cache:
      keys:
        - v2-dependencies-{{ checksum "Gemfile.lock" }}
        - v2-dependencies-
  _install-dependencies: &install-dependencies
    run:
      name: Install dependencies
      command: |
        bundler_version=$(cat Gemfile.lock | tail -1 | tr -d " ")
        gem install bundler -v $bundler_version
        bundle config --local path vendor/bundle
        bundle check || bundle install --jobs=4 --retry=3
  _wait-for-db: &wait-for-db
    run:
      name: Wait for DB
      command: dockerize -wait tcp://localhost:5432 -timeout 1m
  _wait-for-wiremock: &wait-for-wiremock
    run:
      name: Wait for wiremock
      command: dockerize -wait tcp://localhost:8888 -timeout 1m
  _create-db: &create-db
    run:
      name: Database setup
      command: bundle exec rake db:create
  _api_docs: &api_docs
    run:
      name: Generate API Docs
      command: bundle exec rails rswag:specs:swaggerize
  _load_wiremock_mappings: &load_wiremock_mappings
    run:
      name: Load mappings into wiremock
      command: |
        echo "Loading wiremock mappings..."
        find spec/wiremock/prison-api/mappings/*.json -exec curl -vv  --request POST --url http://localhost:8888/__admin/mappings --header 'content-type: application/json' --data-binary "@{}" \;
        curl -vv http://localhost:8888/__admin/mappings 
        echo "Done"
  _notify_sentry_release: &notify_sentry_release
    run:
      name: Create release and notify Sentry of deploy
      command: |
        curl -sL https://sentry.io/get-cli/ | bash
        export SENTRY_RELEASE=$(sentry-cli releases propose-version)
        sentry-cli releases new -p $SENTRY_PROJECT $SENTRY_RELEASE
        sentry-cli releases set-commits $SENTRY_RELEASE --auto
        sentry-cli releases finalize $SENTRY_RELEASE
        sentry-cli releases deploys $SENTRY_RELEASE new -e $SENTRY_ENVIRONMENT
      environment:
        SENTRY_ENVIRONMENT: <<parameters.env>>
  _rspec: &rspec
    run:
      name: Run rspec tests
      command: |
        TESTS=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split )
        echo ${TESTS}
        bundle exec rspec ${TESTS}
        #COVERAGE=1 bundle exec rspec
  _rubocop: &rubocop
    run:
      name: Run rubocop
      command: bundle exec rubocop
  _attach-tmp-workspace: &attach-tmp-workspace
    attach_workspace:
      at: .

executors:
  basic-executor:
    docker:
      - image: cimg/base:2022.11

  cloud-platform-executor:
    docker:
      - image: ${ECR_ENDPOINT}/cloud-platform/tools:circleci
        environment:
          GITHUB_TEAM_NAME_SLUG: book-a-secure-move
          REPO_NAME: hmpps-book-secure-move-api

  test-executor:
    docker:
      # Check https://circleci.com/docs/2.0/language-ruby/ for more details
      - image: circleci/ruby:2.7.3
        environment:
          BUNDLER_VERSION: 2.1.4
          RAILS_ENV: test
          RACK_ENV: test
          DATABASE_URL: "postgres://postgres@localhost/hmpps-book-secure-move-api"
          EXTERNAL_URL: mocked_in_tests
          ENCRYPTOR_SALT: "2EREZ8Xub/vt0ya1ZM6YKUwIMN72MbmqeWMq7KS4BV8oSJJc27rDpZYmA6AQGYcS"
          EXTERNAL_WIREMOCK: "true"
      - image: cimg/postgres:12.11
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: hmpps-book-secure-move-api
          LANG: C.utf8
      - image: wiremock/wiremock:2.32.0-alpine
        command: --port 8888

commands:
  build-base:
    description: "Checkout app code and fetch dependencies for running tests"
    steps:
      - *restore-cache
      - *install-dependencies
      - *save-cache

  seed-database:
    description: "Create and seed the Database"
    steps:
      - *create-db

jobs:
  notify_of_approval:
    resource_class: small
    executor: basic-executor
    steps:
      - *notify_slack_of_approval

  notify_of_release:
    resource_class: small
    executor: basic-executor
    steps:
      - *notify_slack_on_release_start

  setup_test_environment:
    resource_class: small
    executor: test-executor
    steps:
      - checkout
      - setup_remote_docker
      - build-base
      - seed-database

  api_docs:
    resource_class: small
    executor: test-executor
    parallelism: 1
    steps:
      - checkout
      - *attach-tmp-workspace
      - build-base
      - *api_docs
      - persist_to_workspace:
          root: .
          paths:
            - swagger/v1/swagger.yaml
            - swagger/v2/swagger.yaml
      - *notify_slack_on_failure

  rspec_tests:
    executor: test-executor
    parallelism: 1
    steps:
      - checkout
      - build-base
      - *wait-for-db
      - *create-db
      - *attach-tmp-workspace
      - *wait-for-wiremock
      - *load_wiremock_mappings
      - *rspec

  linters:
    resource_class: small
    executor: test-executor
    steps:
      - checkout
      - build-base
      - *attach-tmp-workspace
      - *rubocop

workflows:
  version: 2

  test-build-deploy:
    jobs:
      - notify_of_release:
          context:
            - hmpps-common-vars
          <<: *only_deploy_tags
      - setup_test_environment:
          <<: *all_tags
      - api_docs:
          context:
            - hmpps-common-vars
          <<: *all_tags
          requires:
            - setup_test_environment
      - rspec_tests:
          <<: *all_tags
          requires:
            - setup_test_environment
      - linters:
          <<: *all_tags
          requires:
            - setup_test_environment
      - hmpps/build_docker:
          <<: *only_for_deployment
          requires:
            - api_docs
            - rspec_tests
            - linters
          name: build_image
          image_name: "quay.io/hmpps/hmpps-book-secure-move-api"
          additional_docker_build_args: >
            --label build.git.sha=${CIRCLE_SHA1}
            --label build.git.branch=${CIRCLE_BRANCH}
            --label build.date=$(date -Is)
            --build-arg APP_BUILD_DATE=$(date -Is)
            --build-arg APP_BUILD_TAG=${CIRCLE_BRANCH}
            --build-arg APP_GIT_COMMIT=${CIRCLE_SHA1}
      - hmpps/deploy_env:
          <<: *only_main
          name: deploy_staging
          env: "staging"
          context:
            - hmpps-common-vars
            - basm-api-staging
          requires:
            - build_image
      - hmpps/deploy_env:
          <<: *only_deploy_tags
          name: deploy_uat
          env: "uat"
          context:
            - hmpps-common-vars
            - basm-api-uat
          requires:
            - build_image
      - hmpps/deploy_env:
          <<: *only_deploy_tags
          name: deploy_preprod
          env: "preprod"
          context:
            - hmpps-common-vars
            - basm-api-preprod
          requires:
            - build_image
      - hold_production:
          <<: *only_deploy_tags
          type: approval
          requires:
            - build_image
      - notify_of_approval:
          context:
            - hmpps-common-vars
          <<: *only_deploy_tags
          requires:
            - build_image
      - hmpps/deploy_env:
          <<: *only_deploy_tags
          name: deploy_production
          env: "production"
          context:
            - hmpps-common-vars
            - basm-api-production
          requires:
            - hold_production
